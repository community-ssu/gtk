## This is all very ad-hoc...

arch = i386
#arch = arm

repodir = testrepo
distsdir = $(repodir)/dists
certdir = $(distsdir)/cert
olddir = $(distsdir)/old
newdir = $(distsdir)/new
certpkgdir = $(certdir)/main/binary-$(arch)
oldpkgdir = $(olddir)/main/binary-$(arch)
newpkgdir = $(newdir)/main/binary-$(arch)

all:

repodirs:
	mkdir -p $(certpkgdir)
	mkdir -p $(oldpkgdir)
	mkdir -p $(newpkgdir)

packages: repodirs
	./make-deb certified $(certpkgdir)
	./make-deb package-a1 $(oldpkgdir)
	./make-deb package-a2 $(newpkgdir)
	./make-deb package-b1 $(oldpkgdir)
	./make-deb package-b1 $(newpkgdir)
	./make-deb package-c1 $(oldpkgdir)
	./make-deb package-c1 $(newpkgdir)
	./make-deb borken $(oldpkgdir)
	./make-deb borken $(newpkgdir)
	./make-deb testrepo-conf-mmc $(repodir)

repo: packages
	cd $(repodir) && apt-ftparchive packages dists/cert >../$(certpkgdir)/Packages
	cd $(repodir) && apt-ftparchive packages dists/old >../$(oldpkgdir)/Packages
	cd $(repodir) && apt-ftparchive packages dists/new >../$(newpkgdir)/Packages
	rm -f $(certdir)/Release
	apt-ftparchive -c=apt.conf.cert release $(certdir) > $(certdir)/.Release
	mv $(certdir)/.Release $(certdir)/Release
	rm -f $(olddir)/Release
	gpg --default-key 3267077C --yes --sign -ba -o $(certdir)/Release.gpg $(certdir)/Release
	apt-ftparchive -c=apt.conf.old release $(olddir) > $(olddir)/.Release
	mv $(olddir)/.Release $(olddir)/Release
	rm -f $(newdir)/Release
	gpg --default-key 3267077C --yes --sign -ba -o $(olddir)/Release.gpg $(olddir)/Release
	apt-ftparchive -c=apt.conf.new release $(newdir) > $(newdir)/.Release
	mv $(newdir)/.Release $(newdir)/Release
	gpg --default-key 3267077C --yes --sign -ba -o $(newdir)/Release.gpg $(newdir)/Release

tar: repo
	tar czf $(repodir).tar.gz $(repodir)

clean:
	rm -rf $(repodir)
