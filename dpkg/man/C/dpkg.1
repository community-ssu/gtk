.TH DPKG 1 "2006-01-26" "Debian Project" "dpkg suite"
.SH NAME
dpkg - package manager for Debian

.SH SYNOPSIS
.B dpkg
[\fIoptions\fP] \fIaction\fP

.SH WARNING
This manual is intended for users wishing to understand \fBdpkg\fP's
command line options and package states in more detail than that
provided by \fBdpkg \-\-help\fP.

It should \fInot\fP be used by package maintainers wishing to
understand how \fBdpkg\fP will install their packages.  The
descriptions of what \fBdpkg\fP does when installing and removing
packages are particularly inadequate.

.SH DESCRIPTION
\fBdpkg\fP is a tool to install, build, remove and manage
Debian packages. The primary and more user-friendly
front-end for \fBdpkg\fP is \fBdselect\fP(1).  \fBdpkg\fP itself is
controlled entirely via command line parameters, which consist of exactly
one action and zero or more options. The action-parameter tells dpkg
what to do and options control the behavior of the action in some way.

\fBdpkg\fP can be also be used as a front-end to \fBdpkg\-deb\fP.
The following
are \fBdpkg\-deb\fP actions, and if they are encountered, \fBdpkg\fP
just runs \fBdpkg\-deb\fP with the parameters given to it:
.nf
    \fB\-b\fP, \fB\-\-build\fP,
    \fB\-c\fP, \fB\-\-contents\fP,
    \fB\-I\fP, \fB\-\-info\fP,
    \fB\-f\fP, \fB\-\-field\fP,
    \fB\-e\fP, \fB\-\-control\fP,
    \fB\-x\fP, \fB\-\-extract\fP,
    \fB\-X\fP, \fB\-\-vextract\fP, and
    \fB\-\-fsys\-tarfile\fP.
.fi
Please refer to \fBdpkg\-deb\fP(1) for information about these actions.

.SH INFORMATION ABOUT PACKAGES
\fBdpkg\fP maintains some usable information about available
packages. The information is divided in three classes: \fBstates\fP,
\fBselection states\fP and \fBflags\fP.  These values are intended to
be changed mainly with \fBdselect\fP.
.SS PACKAGE STATES
.TP
.B installed
The package is unpacked and configured OK.
.TP
.B half\-installed
The installation of the package has been started, but not completed for
some reason.
.TP
.B not\-installed
The package is not installed on your system.
.TP
.B unpacked
The package is unpacked, but not configured.
.TP
.B half\-configured
The package is unpacked and configuration has been started, but not yet
completed for some reason.
.TP
.B config\-files
Only the configuration files of the package exist on the system.
.SS PACKAGE SELECTION STATES
.TP
.B install
The package is selected for installation.
.TP
.B deinstall
The package is selected for deinstallation (i.e. we want to remove all
files, except configuration files).
.TP
.B purge
The package is selected to be purged (i.e. we want to remove everything,
even configuration files).
.SS PACKAGE FLAGS
.TP
.B hold
A package marked to be on \fBhold\fP is not handled by \fBdpkg\fP,
unless forced to do that with option \fB\-\-force\-hold\fP.
.TP
.B reinst\-required
A package marked \fBreinst\-required\fP is broken and requires
reinstallation. These packages cannot be removed, unless forced with
option \fB\-\-force\-remove\-reinstreq\fP.

.SH ACTIONS
.TP
\fBdpkg \-i\fP | \fB\-\-install\fP \fIpackage_file\fP...
Install the package. If \fB\-\-recursive\fP or \fB\-R\fP option is
specified, \fIpackage_file\fP must refer to a directory instead.

Installation consists of the following steps:
.br

\fB1.\fP Extract the control files of the new package.
.br

\fB2.\fP If another version of the same package was installed before
the new installation, execute \fIprerm\fP script of the old package.
.br

\fB3.\fP Run \fIpreinst\fP script, if provided by the package.
.br

\fB4.\fP Unpack the new files, and at the same time back up the old
files, so that if something goes wrong, they can be restored.
.br

\fB5.\fP If another version of the same package was installed before
the new installation, execute the \fIpostrm\fP script of the old
package. Note that this script is executed after the \fIpreinst\fP
script of the new package, because new files are written at the same
time old files are removed.
.br

\fB6.\fP Configure the package. See \fB\-\-configure\fP for detailed
information about how this is done.
.TP
\fBdpkg \-\-unpack \fP\fIpackage_file\fP ...
Unpack the package, but don't configure it. If \fB\-\-recursive\fP or
\fB\-R\fP option is specified, \fIpackage_file\fP must refer to a
directory instead.
.TP
\fBdpkg \-\-configure \fP\fIpackage\fP ... | \fB\-a\fP | \fB\-\-pending\fP
Reconfigure an unpacked package.  If \fB\-a\fP or \fB\-\-pending\fP is
given instead of \fIpackage\fP, all unpacked but unconfigured
packages are configured.

Configuring consists of the following steps:
.br

\fB1.\fP Unpack the configuration files, and at the same time back up
the old configuration files, so that they can be restored if
something goes wrong.
.br

\fB2.\fP Run \fIpostinst\fP script, if provided by the package.
.TP
\fBdpkg \-r\fP | \fB\-\-remove\fP | \fB\-P\fP | \fB\-\-purge \fP\fIpackage\fP ... | \fB\-a\fP | \fB\-\-pending\fP
Remove an installed package.  \fB\-r\fP or \fB\-\-remove\fP remove
everything except configuration files.  This may avoid having to
reconfigure the package if it is reinstalled later.  (Configuration
files are the files listed in the \fIdebian/conffiles\fP control
file).  \fB\-P\fP or \fB\-\-purge\fP removes everything, including configuration
files.  If \fB\-a\fP or \fB\-\-pending\fP is given instead of a package
name, then all packages unpacked, but marked to be removed or purged
in file \fI/var/lib/dpkg/status\fP, are removed or purged,
respectively.

Removing of a package consists of the following steps:
.br

\fB1.\fP Run \fIprerm\fP script
.br

\fB2.\fP Remove the installed files
.br

\fB3.\fP Run \fIpostrm\fP script
.br
.TP
\fBdpkg \-\-update\-avail\fP | \fB\-\-merge\-avail\fP \fIPackages-file\fP
Update \fBdpkg\fP's and \fBdselect\fP's idea of which packages are
available.  With action \fB\-\-merge\-avail\fP, old information is
combined with information from \fIPackages-file\fP.  With action
\fB\-\-update\-avail\fP, old information is replaced with the information
in the \fIPackages-file\fP.  The \fIPackages-file\fP distributed with
Debian is simply named \fIPackages\fP.  \fBdpkg\fP keeps its
record of available packages in \fI/var/lib/dpkg/available\fP.

A simpler one-shot command to retrieve and update the \fIavailable\fR
file is \fBdselect update\fR.
.TP
\fBdpkg \-A\fP | \fB\-\-record\-avail\fP \fIpackage_file\fP ...
Update \fBdpkg\fP and \fBdselect\fP's idea of which packages are
available with information from the package \fIpackage_file\fP.  If
\fB\-\-recursive\fP or \fB\-R\fP option is specified, \fIpackage_file\fP
must refer to a directory instead.
.TP
.B dpkg \-\-forget\-old\-unavail
Forget about uninstalled unavailable packages.
.TP
.B dpkg \-\-clear\-avail
Erase the existing information about what packages are available.
.TP
\fBdpkg \-C\fP | \fB\-\-audit\fP
Searches for packages that have been installed only partially on your
system.  \fBdpkg\fP will suggest what to do with them to get them
working.
.TP
\fBdpkg \-\-get\-selections\fP [\fIpackage-name-pattern\fP...]
Get list of package selections, and write it to stdout.
.TP
.B dpkg \-\-set\-selections
Set package selections using file read from stdin.  This file should be
in the format '<package> <state>', where state is one of install, hold,
deinstall or purge.  Blank lines and comment lines beginning with '#'
are also permitted.
.TP
.B dpkg \-\-yet\-to\-unpack
Searches for packages selected for installation, but which for some
reason still haven't been installed.
.TP
.TP
.B dpkg \-\-print\-architecture
Print architecture of packages dpkg installs (for example, "i386").
.TP
.B dpkg \-\-compare\-versions \fIver1 op ver2\fP
Compare version numbers, where \fIop\fP is a binary operator.  \fBdpkg\fP
returns success (zero result) if the specified condition is satisfied,
and failure (nonzero result) otherwise.  There are
two groups of operators, which differ in how they treat an empty
\fIver1\fP or \fIver2\fP.  These treat an empty version as earlier than any
version: \fBlt le eq ne ge gt\fP.  These treat an empty version as later
than any version: \fBlt\-nl le\-nl ge\-nl gt\-nl\fP.  These are provided
only for compatibility with control file syntax: \fB< << <= = >= >>
>\fP.
.TP
.B dpkg \-\-command\-fd <n>
Accept a series of commands on input file descriptor \fB<n>\fP.  Note:
additional options set on the command line, and thru this file descriptor,
are not reset for subsequent commands executed during the same run.
.TP
.B dpkg \-\-help
Display a brief help message.
.TP
.B dpkg \-\-force\-help
Give help about the \fB\-\-force\-\fP\fIthing\fP options.
.TP
.BR "dpkg \-Dh " | " \-\-debug=help"
Give help about debugging options.
.TP
\fBdpkg \-\-licence\fP | \fBdpkg \-\-license\fP
Display \fBdpkg\fP licence.
.TP
\fBdpkg \-\-version\fP
Display \fBdpkg\fP version information.
.TP
\fBdpkg\-deb\-actions\fP
See \fBdpkg\-deb\fP(1) for more information about the following actions.

.nf
\fBdpkg \-b\fP | \fB\-\-build\fP \fIdirectory\fP [\fIfilename\fP]
    Build a deb package.
\fBdpkg \-c\fP | \fB\-\-contents\fP \fIfilename\fP
    List contents of a deb package.
\fBdpkg \-e\fP | \fB\-\-control\fP \fIfilename\fP [\fIdirectory\fP]
    Extract control-information from a package.
\fBdpkg \-x\fP | \fB\-\-extract\fP \fIfilename directory\fP
    Extract the files contained by package.
\fBdpkg \-f\fP | \fB\-\-field\fP  \fIfilename\fP [\fIcontrol-field\fP] ...
    Display control field(s) of a package.
\fBdpkg \-\-fsys\-tarfile\fP \fIfilename\fP
    Display the filesystem tar-file contained by a
    Debian package.
\fBdpkg \-I\fP | \fB\-\-info\fP \fIfilename\fP [\fIcontrol-file\fP]
    Show information about a package.
\fBdpkg \-X\fP | \fB\-\-vextract\fP \fIfilename\fP \fIdirectory\fP
    Extract and display the filenames contained by a
    package.
.fi

.TP
\fBdpkg\-query-actions\fP
See \fBdpkg\-query\fP(1) for more information about the following actions.

.nf

\fBdpkg \-l\fP | \fB\-\-list\fP \fIpackage-name-pattern\fP ...
    List packages matching given pattern.
\fBdpkg \-s\fP | \fB\-\-status\fP \fIpackage-name\fP ...
    Report status of specified package.
\fBdpkg \-L\fP | \fB\-\-listfiles\fP \fIpackage\fP ...
    List files installed to your system from \fBpackage\fP.
\fBdpkg \-S\fP | \fB\-\-search\fP \fIfilename-search-pattern\fP ...
    Search for a filename from installed packages.
\fBdpkg \-p\fP | \fB\-\-print\-avail\fP \fIpackage\fP
    Display details about \fIpackage\fP, as found in \fI/var/lib/dpkg/available\fP.
.fi



.SH OPTIONS
All options can be specified both on the commandline and in the \fBdpkg\fP
configuration file \fI/etc/dpkg/dpkg.cfg\fP. Each line in the configuration
file is either an option (exactly the same as the commandline option but
without leading dashes) or a comment (if it starts with a \fB#\fR).
.br
.TP
\fB\-\-abort\-after=\fP\fInumber\fP
Change after how many errors dpkg will abort. The default is 50.
.TP
.BR \-B | \-\-auto\-deconfigure
When a package is removed, there is a possibility that another
installed package depended on the removed package. Specifying this
option will cause automatic deconfiguration of the package which
depended on the removed package.
.TP
\fB\-D\fIoctal\fP | \fB\-\-debug=\fP\fIoctal\fP
Set debugging on.  \fIoctal\fP is formed by bitwise-orring desired
values together from the list below (note that these values may change
in future releases).  \fB\-Dh\fP or \fB\-\-debug=help\fP display these
debugging values.

 number  description
    1   Generally helpful progress information
    2   Invocation and status of maintainer scripts
   10   Output for each file processed
  100   Lots of output for each file processed
   20   Output for each configuration file
  200   Lots of output for each configuration file
   40   Dependencies and conflicts
  400   Lots of dependencies/conflicts output
 1000   Lots of drivel about e.g. the dpkg/info dir
 2000   Insane amounts of drivel
.TP
\fB\-\-force\-\fP\fIthings\fP | \fB\-\-no\-force\-\fP\fIthings\fP | \fB\-\-refuse\-\fP\fIthings\fP

Force or refuse (\fBno\-force\fP and \fBrefuse\fP mean the same thing)
to do some things.  \fIthings\fP is a comma separated list of things
specified below.  \fB\-\-force\-help\fP displays a message describing them.
Things marked with (*) are forced by default.

\fIWarning: These options are mostly intended to be used by experts
only. Using them without fully understanding their effects may break
your whole system.\fP

\fBall\fP:
Turns on(or off) all force options.

\fBauto\-select\fP(*):
Select packages to install them, and deselect packages to remove them.

\fBdowngrade\fP(*):
Install a package, even if newer version of it is already installed.

\fIWarning: At present dpkg does not do any dependency 
checking on downgrades and therefore will not warn you 
if the downgrade breaks the dependency of some other 
package.  This can have serious side effects, downgrading
essential system components can even make your whole
system unusable.  Use with care.\fP

\fBconfigure\-any\fP:
Configure also any unpacked but unconfigured packages on which the current
package depends.

\fBhold\fP:
Process packages even when marked "hold".

\fBremove\-reinstreq\fP:
Remove a package, even if it's broken and marked to require
reinstallation.  This may, for example, cause parts of the package to
remain on the system, which will then be forgotten by \fBdpkg\fP.

\fBremove\-essential\fP:
Remove, even if the package is considered essential. Essential
packages contain mostly very basic Unix commands. Removing them might
cause the whole system to stop working, so use with caution.

\fBdepends\fP:
Turn all dependency problems into warnings.

\fBdepends\-version\fP:
Don't care about versions when checking dependencies.

\fBconflicts\fP:
Install, even if it conflicts with another package. This is dangerous,
for it will usually cause overwriting of some files.

\fBconfmiss\fP:
Always install a missing configuration file. This is dangerous,
since it means not preserving a change (removing) made to the
file.

\fBconfnew\fP:
If a conffile has been modified always install the new version without
prompting, unless the \fB\-\-force\-confdef\fP is also specified, in
which case the default action is preferred.

\fBconfold\fP:
If a conffile has been modified always keep the old version without
prompting, unless the \fB\-\-force\-confdef\fP is also specified, in
which case the default action is preferred.

\fBconfdef\fP:
If a conffile has been modified always choose the default action. If
there is no default action it will stop to ask the user unless 
\fB\-\-force\-confnew\fP or \fB\-\-force\-confold\fP is also been given, in
which case it will use that to decide the final action.

\fBoverwrite\fP:
Overwrite one package's file with another's file.

\fBoverwrite\-dir\fP
Overwrite one package's directory with another's file.

\fBoverwrite\-diverted\fP:
Overwrite a diverted file with an undiverted version.

\fBarchitecture\fP:
Process even packages with the wrong architecture.

\fBbad\-path\fP:
\fBPATH\fP is missing important programs, so problems are likely.

\fBnot\-root\fP:
Try to (de)install things even when not root.

\fBbad\-verify\fP:
Install a package even if it fails authenticity check.

.TP
\fB\-\-ignore\-depends\fP=\fIpackage\fP,...
Ignore dependency-checking for specified packages (actually, checking is
performed, but only warnings about conflicts are given, nothing else).
.TP
\fB\-\-new\fP | \fB\-\-old\fP
Select new or old binary package format. This is a \fBdpkg\-deb\fP(1)
option.
.TP
.B \-\-nocheck
Don't read or check contents of control file while building a package.
This is a \fBdpkg\-deb\fP(1) option.
.TP
\fB\-\-no\-act\fP | \fB\-\-dry\-run\fP | \fB\-\-simulate\fP
Do everything which is supposed to be done, but don't write any
changes. This is used to see what would happen with the specified
action, without actually modifying anything.

Be sure to give \fB\-\-no\-act\fP before the action-parameter, or you might
end up with undesirable results.  (e.g.  \fBdpkg \-\-purge foo
\-\-no\-act\fP will first purge package foo and then try to purge package
\-\-no\-act, even though you probably expected it to actually do nothing)
.TP
\fB\-R\fP | \fB\-\-recursive\fP
Recursively handle all regular files matching pattern \fB*.deb\fP
found at specified directories and all of its subdirectories. This can
be used with \fB\-i\fP, \fB\-A\fP, \fB\-\-install\fP, \fB\-\-unpack\fP and
\fB\-\-avail\fP actions.
.TP
\fB\-G\fP
Don't install a package if a newer version of the same package is already
installed. This is an alias of \fB\-\-refuse\-downgrade.\fP
.TP
\fB\-\-root=\fP\fIdir\fP | \fB\-\-admindir=\fP\fIdir\fP | \fB\-\-instdir=\fP\fIdir\fP
Change default directories.  \fBadmindir\fP defaults to
\fI/var/lib/dpkg\fP and contains many files that give information
about status of installed or uninstalled packages, etc.  \fBinstdir\fP
defaults to \fI/\fP and refers to the directory where packages are to
be installed.  \fBinstdir\fP is also the directory passed to
\fBchroot\fP(2) before running \fIpackage\fP's installation scripts, which
means that the scripts see \fBinstdir\fP as a root directory.
Changing \fBroot\fP changes \fBinstdir\fP to \fIdir\fP and
\fBadmindir\fP to \fIdir\fP\fB/var/lib/dpkg\fP.
.TP
\fB\-O\fP | \fB\-\-selected\-only\fP
Only process the packages that are selected for installation. The
actual marking is done with \fBdselect\fP or by \fBdpkg\fP, when it
handles packages.  For example, when a package is removed, it will
be marked selected for deinstallation.
.TP
.BR \-E " | " \-\-skip\-same\-version
Don't install the package if the same version of the package is already
installed.
.TP
\fB\-\-status\-fd \fP\fI<n>\fP
Send package status info to file descriptor \fI<n>\fP.  This can be given
multiple times.  Status updates are of the form `status: <pkg>: <pkg qstate>'.
Errors are reported as `status: <pkg>: error: extend-error-message'.
Configuration file conflicts are reported as 
`status: conffile-prompt: conffile : 'current-conffile' 'new-conffile' useredited distedited'
.TP
\fB\-\-log=\fP\fIfilename\fP
Log status change updates and actions to \fIfilename\fP.  This can be given
multiple times.  Log messages are of the form `YYYY-MM-DD HH:MM:SS status
<state> <pkg> <installed-version>' for status change updates;
`YYYY-MM-DD HH:MM:SS <action> <pkg> <installed-version>
<available-version>' for actions where \fI<action>\fP is one of install,
upgrade, remove, purge; and `YYYY-MM-DD HH:MM:SS conffile <filename>
<decision>' for conffile changes where \fI<decision\fP is either install
or keep.
.TP
\fB\-\-no\-debsig\fP
Do not try to verify package signatures.
.SH FILES
.TP
.I /etc/dpkg/dpkg.cfg
Configuration file with default options.
.P
The other files listed below are in their default directories, see option
\fB\-\-admindir\fP to see how to change locations of these files.
.TP
.I /var/lib/dpkg/available
List of available packages.
.TP
.I /var/lib/dpkg/status
Statuses of available packages. This file contains information about
whether a package is marked for removing or not, whether it is
installed or not, etc. See section \fBINFORMATION ABOUT PACKAGES\fP
for more info.
.P
The following files are components of a binary package.  See \fBdeb\fP(5)
for more information about them:
.TP
.I control
.TP
.I conffiles
.TP
.I preinst
.TP
.I postinst
.TP
.I prerm
.TP
.I postrm

.SH ENVIRONMENT VARIABLES
.TP
.B DPKG_NO_TSTP
Define this to something if you prefer \fBdpkg\fP starting a new
shell rather than suspending itself, while doing a shell escape.
.TP
.B SHELL
The program \fBdpkg\fP will execute while starting a new shell.
.TP
.B COLUMNS
Sets the number of columns \fBdpkg\fP should use when displaying formatted
text.  Currently only used by \-l.
.TP
.B DPKG_OLD_CONFFILE
Set by \fBdpkg\fP to the filename of the old configuration file 
when you start a shell to examine a changed configuration.
file.
.TP
.B DPKG_NEW_CONFFILE
Set by \fBdpkg\fP to the filename of the newversion of a configuration file
when you start a shell to examine a changed configuration.
file.

.SH EXAMPLES
To list packages related to the editor vi:
.br
\fB     dpkg \-l '*vi*'\fP
.br

To see the entries in \fI/var/lib/dpkg/available\fP on two packages:
.br
\fB     dpkg \-\-print\-avail elvis vim | less\fP
.br

To search the listing of packages yourself:
.br
\fB     less /var/lib/dpkg/available\fP
.br

To remove an installed elvis package:
.br
\fB     dpkg \-r elvis\fP
.br

To install a package, you first need to find it in an archive or
CDROM.  The "available" file shows that the vim package is in section
"editors":
.br
\fB     cd /cdrom/hamm/hamm/binary/editors\fP
\fB     dpkg \-i vim_4.5\-3.deb\fP
.br

To make a local copy of the package selection states:
.br
\fB     dpkg \-\-get\-selections >myselections\fP
.br

You might transfer this file to another computer, and install it there
with:
.br
\fB     dpkg \-\-set\-selections <myselections\fP
.br
Note that this will not actually install or remove anything, but just
set the selection state on the requested packages.  You will need some
other application to actually download and install the requested
packages.  For example, run \fBdselect\fP and choose "Install".

Ordinarily, you will find that \fBdselect\fP(1) provides a more
convenient way to modify the package selection states.
.br
.SH ADDITIONAL FUNCTIONALITY
Additional functionality can be gained by installing any of the
following packages: \fIapt\fR, \fIaptitude\fR and \fIdebsums\fR.

.SH SEE ALSO
\fBdselect\fP(1),
\fBdpkg\-deb\fP(1),
\fBdeb\fP(5),
\fBdeb\-control\fP(5),
and
\fBdpkg\-reconfigure\fP(8)

.SH BUGS

\fB\-\-no\-act\fP usually gives less information than might be helpful.

.SH AUTHORS
.nf
See \fB/usr/share/doc/dpkg/THANKS.gz\fP for the list of people who have
contributed to \fBdpkg\fP .
.fi
