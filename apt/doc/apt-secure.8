.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "APT-SECURE" 8 "14 December 2003" "Linux" ""
.SH NAME
apt-secure \- Archive authentication support for APT
.SH "DESCRIPTION"

.PP
Starting with version 0\&.6, \fBapt\fR contains code that does signature checking of the Release file for all archives\&. This ensures that packages in the archive can't be modified by people who have no access to the Release file signing key\&.

.PP
If a package comes from a archive without a signature or with a signature that apt does not have a key for that package is considered untrusted and installing it will result in a big warning\&. \fBapt\-get\fR will currently only warn for unsigned archives, future releases might force all sources to be verified before downloading packages from them\&.

.PP
The package frontends \fB\fBapt\-get\fR\fR(8), \fB\fBaptitude\fR\fR(8) and \fB\fBsynaptic\fR\fR(8) support this new authentication feature\&.

.SH "TRUSTED ARCHIVES"

.PP
The chain of trust from an apt archive to the end user is made up of different steps\&. \fBapt\-secure\fR is the last step in this chain, trusting an archive does not mean that the packages that you trust it do not contain malicious code but means that you trust the archive maintainer\&. Its the archive maintainer responsibility to ensure that the archive integrity is correct\&.

.PP
apt\-secure does not review signatures at a package level\&. If you require tools to do this you should look at \fBdebsig\-verify\fR and \fBdebsign\fR (provided in the debsig\-verify and devscripts packages respectively)\&.

.PP
The chain of trust in Debian starts when a maintainer uploads a new package or a new version of a package to the Debian archive\&. This upload in order to become effective needs to be signed by a key of a maintainer within the Debian maintainer's keyring (available in the debian\-keyring package)\&. Maintainer's keys are signed by other maintainers following pre\-established procedures to ensure the identity of the key holder\&.

.PP
Once the uploaded package is verified and included in the archive, the maintainer signature is stripped off, an MD5 sum of the package is computed and put in the Packages file\&. The MD5 sum of all of the packages files are then computed and put into the Release file\&. The Release file is then signed by the archive key (which is created once a year and distributed through the FTP server\&. This key is also on the Debian keyring\&.

.PP
Any end user can check the signature of the Release file, extract the MD5 sum of a package from it and compare it with the MD5 sum of the package he downloaded\&. Prior to version 0\&.6 only the MD5 sum of the downloaded Debian package was checked\&. Now both the MD5 sum and the signature of the Release file are checked\&.

.PP
Notice that this is distinct from checking signatures on a per package basis\&. It is designed to prevent two possible attacks:

.TP 3
\(bu
Network "man in the middle" attacks\&. Without signature checking, a malicious agent can introduce himself in the package download process and provide malicious software either by controlling a network element (router, switch, etc\&.) or by redirecting traffic to a rogue server (through arp or DNS spoofing attacks)\&.
.TP
\(bu
Mirror network compromise\&. Without signature checking, a malicious agent can compromise a mirror host and modify the files in it to propage malicious software to all users downloading packages from that host\&.
.LP

.PP
However, it does not defend against a compromise of the Debian master server itself (which signs the packages) or against a compromise of the key used to sign the Release files\&. In any case, this mechanism can complement a per\-package signature\&.

.SH "USER CONFIGURATION"

.PP
 \fBapt\-key\fR is the program that manages the list of keys used by apt\&. It can be used to add or remove keys although an installation of this release will automatically provide the default Debian archive signing keys used in the Debian package repositories\&.

.PP
In order to add a new key you need to first download it (you should make sure you are using a trusted communication channel when retrieving it), add it with \fBapt\-key\fR and then run \fBapt\-get update\fR so that apt can download and verify the \fIRelease\&.gpg\fR files from the archives you have configured\&.

.SH "ARCHIVE CONFIGURATION"

.PP
If you want to provide archive signatures in an archive under your maintenance you have to:

.TP 3
\(bu
Create a toplevel Release file\&. if it does not exist already\&. You can do this by running \fBapt\-ftparchive release\fR (provided inftp apt\-utils)\&.
.TP
\(bu
Sign it\&. You can do this by running \fBgpg \-abs \-o Release\&.gpg Release\fR\&.
.TP
\(bu
Publish the key fingerprint, that way your users will know what key they need to import in order to authenticate the files in the archive\&.
.LP

.PP
Whenever the contents of the archive changes (new packages are added or removed) the archive maintainer has to follow the first two steps previously outlined\&.

.SH "SEE ALSO"

.PP
 \fB\fIapt\&.conf\fR\fR(5), \fB\fBapt\-get\fR\fR(8), \fB\fIsources\&.list\fR\fR(5), \fB\fBapt\-key\fR\fR(8), \fB\fIapt\-archive\fR\fR(1), \fB\fBdebsign\fR\fR(1)  \fB\fBdebsig\-verify\fR\fR(1), \fB\fBgpg\fR\fR(1) 

.PP
For more backgound information you might want to review the Debian Security Infrastructure: \fIhttp://www.debian.org/doc/manuals/securing-debian-howto/ch7.en.html\fR chapter of the Securing Debian Manual (available also in the harden\-doc package) and the Strong Distribution HOWTO: \fIhttp://www.cryptnet.net/fdp/crypto/strong_distro.html\fR by V\&. Alex Brennen\&.

.SH "BUGS"

.PP
APT bug page: \fIhttp://bugs.debian.org/src:apt\fR\&. If you wish to report a bug in APT, please see \fI/usr/share/doc/debian/bug\-reporting\&.txt\fR or the \fB\fBreportbug\fR\fR(1) command\&.

.SH "AUTHOR"

.PP
APT was written by the APT team <apt@packages\&.debian\&.org>\&.

.SH "MANPAGE AUTHORS"

.PP
This man\-page is based on the work of Javier Fernández\-Sanguino Peña, Isaac Jones, Colin Walters, Florian Weimer and Michael Vogt\&.

.SH AUTHOR
Jason Gunthorpe.
