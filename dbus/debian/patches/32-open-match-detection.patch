diff -ur dbus/bus/signals.c dbus.new/bus/signals.c
--- dbus/bus/signals.c	2006-05-05 18:59:25.000000000 +0300
+++ dbus.new/bus/signals.c	2006-09-18 16:39:32.183681096 +0300
@@ -24,6 +24,7 @@
 #include "services.h"
 #include "utils.h"
 #include <dbus/dbus-marshal-validate.h>
+#include <syslog.h>
 
 struct BusMatchRule
 {
@@ -764,6 +765,8 @@
   BusMatchRule *rule;
   RuleToken tokens[MAX_RULE_TOKENS+1]; /* NULL termination + 1 */
   int i;
+  dbus_bool_t method_type_is = FALSE, sender_is = FALSE, interface_is = FALSE,
+              member_is = FALSE, path_is = FALSE, arg_is = FALSE;
   
   _DBUS_ASSERT_ERROR_IS_CLEAR (error);
 
@@ -818,6 +821,8 @@
                               "Invalid message type (%s) in match rule\n", value);
               goto failed;
             }
+          if (t == DBUS_MESSAGE_TYPE_METHOD_CALL)
+              method_type_is = TRUE;
 
           if (!bus_match_rule_set_message_type (rule, t))
             {
@@ -841,6 +846,9 @@
               goto failed;
             }
 
+          if (strstr(value, "org.freedesktop.DBus") == NULL)
+            sender_is = TRUE;
+
           if (!bus_match_rule_set_sender (rule, value))
             {
               BUS_SET_OOM (error);
@@ -863,6 +871,9 @@
               goto failed;
             }
 
+          if (strstr(value, "org.freedesktop.DBus") == NULL)
+            interface_is = TRUE;
+
           if (!bus_match_rule_set_interface (rule, value))
             {
               BUS_SET_OOM (error);
@@ -884,6 +895,7 @@
                               "Member name '%s' is invalid\n", value);
               goto failed;
             }
+          member_is = TRUE;
 
           if (!bus_match_rule_set_member (rule, value))
             {
@@ -907,6 +919,9 @@
               goto failed;
             }
 
+          if (strstr(value, "/org/freedesktop/DBus") == NULL)
+            path_is = TRUE;
+
           if (!bus_match_rule_set_path (rule, value))
             {
               BUS_SET_OOM (error);
@@ -939,6 +954,7 @@
         {
           if (!bus_match_rule_parse_arg_match (rule, key, &tmp_str, error))
             goto failed;
+          arg_is = TRUE;
         }
       else
         {
@@ -951,6 +967,14 @@
       ++i;
     }
   
+  if (!method_type_is && !sender_is && !interface_is && !member_is
+      && !path_is && !arg_is) {
+      openlog("D-Bus daemon", LOG_PID | LOG_CONS, LOG_DAEMON);
+      syslog(LOG_DAEMON | LOG_WARNING, "WARNING: match %s added by %s",
+             _dbus_string_get_data(rule_text),
+             bus_connection_get_name(matches_go_to));
+      closelog();
+  }
 
   goto out;
   
