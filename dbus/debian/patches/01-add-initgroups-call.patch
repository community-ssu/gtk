diff -pur dbus-1.0.0/dbus/dbus-sysdeps-util-unix.c dbus-1.0.0.new/dbus/dbus-sysdeps-util-unix.c
--- dbus-1.0.0/dbus/dbus-sysdeps-util-unix.c	2006-11-02 21:19:08.000000000 +0200
+++ dbus-1.0.0.new/dbus/dbus-sysdeps-util-unix.c	2006-11-13 16:23:03.861445216 +0200
@@ -43,6 +43,7 @@
 #include <sys/socket.h>
 #include <dirent.h>
 #include <sys/un.h>
+#include <pwd.h>
 
 #ifdef HAVE_SYS_SYSLIMITS_H
 #include <sys/syslimits.h>
@@ -254,17 +255,23 @@ _dbus_change_identity  (dbus_uid_t     u
                         dbus_gid_t     gid,
                         DBusError     *error)
 {
-  /* setgroups() only works if we are a privileged process,
-   * so we don't return error on failure; the only possible
-   * failure is that we don't have perms to do it.
-   *
-   * not sure this is right, maybe if setuid()
-   * is going to work then setgroups() should also work.
-   */
-  if (setgroups (0, NULL) < 0)
-    _dbus_warn ("Failed to drop supplementary groups: %s\n",
-                _dbus_strerror (errno));
-  
+  struct passwd *pw = getpwuid(uid);
+  if (pw == NULL)
+    {
+      dbus_set_error (error, _dbus_error_from_errno (errno),
+                     "getpwuid() for UID '%d' failed: %s", uid,
+                     _dbus_strerror (errno));
+      return FALSE;
+    }
+
+  if (initgroups (pw->pw_name, pw->pw_gid) < 0)
+    {
+      dbus_set_error (error, _dbus_error_from_errno (errno),
+                      "initgroups() failed: %s",
+                      _dbus_strerror (errno));
+      return FALSE;
+    }
+
   /* Set GID first, or the setuid may remove our permission
    * to change the GID
    */
