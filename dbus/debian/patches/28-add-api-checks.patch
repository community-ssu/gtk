diff -ur dbus/dbus/dbus-pending-call.c dbus.new/dbus/dbus-pending-call.c
--- dbus/dbus/dbus-pending-call.c	2006-05-05 18:59:22.000000000 +0300
+++ dbus.new/dbus/dbus-pending-call.c	2006-09-08 11:21:48.262118032 +0300
@@ -56,6 +56,7 @@
   DBusPendingCall *pending;
   DBusTimeout *timeout;
 
+  _dbus_return_val_if_fail (connection != NULL, NULL);
   _dbus_assert (timeout_milliseconds >= 0 || timeout_milliseconds == -1);
   
   if (timeout_milliseconds == -1)
@@ -110,6 +111,7 @@
 void
 _dbus_pending_call_notify (DBusPendingCall *pending)
 {
+  _dbus_return_if_fail (pending != NULL);
   _dbus_assert (!pending->completed);
   
   pending->completed = TRUE;
@@ -248,6 +250,7 @@
 void
 dbus_pending_call_cancel (DBusPendingCall *pending)
 {
+  _dbus_return_if_fail (pending != NULL);
   if (pending->connection)
     _dbus_connection_remove_pending_call (pending->connection,
                                           pending);
@@ -264,6 +267,7 @@
 dbus_bool_t
 dbus_pending_call_get_completed (DBusPendingCall *pending)
 {
+  _dbus_return_val_if_fail (pending != NULL, FALSE);
   return pending->completed;
 }
 
@@ -281,6 +285,7 @@
 {
   DBusMessage *message;
   
+  _dbus_return_val_if_fail (pending != NULL, NULL);
   _dbus_return_val_if_fail (pending->completed, NULL);
   _dbus_return_val_if_fail (pending->reply != NULL, NULL);
   
@@ -307,6 +312,8 @@
 void
 dbus_pending_call_block (DBusPendingCall *pending)
 {
+  _dbus_return_if_fail (pending != NULL);
+
   _dbus_connection_block_pending_call (pending);
 }
 
@@ -330,6 +337,8 @@
 dbus_bool_t
 dbus_pending_call_allocate_data_slot (dbus_int32_t *slot_p)
 {
+  _dbus_return_val_if_fail (slot_p != NULL, FALSE);
+
   return _dbus_data_slot_allocator_alloc (&slot_allocator,
                                           _DBUS_LOCK_NAME (pending_call_slots),
                                           slot_p);
@@ -349,6 +358,7 @@
 void
 dbus_pending_call_free_data_slot (dbus_int32_t *slot_p)
 {
+  _dbus_return_if_fail (slot_p != NULL);
   _dbus_return_if_fail (*slot_p >= 0);
   
   _dbus_data_slot_allocator_free (&slot_allocator, slot_p);
