#!/usr/bin/make -f

PYVER=2.4
PYTHON=python$(PYVER)

p_base=$(PYTHON)
p_dev=$(PYTHON)-dev

d_base=debian/$(p_base)
d_dev=debian/$(p_dev)

scriptdir=usr/lib/$(PYTHON)

#ifeq ($(DEB_BUILD_ARCH),armel)
#	CFLAGS=-Os -mthumb -mfloat-abi=softfp -Wall -Wstrict-prototypes
#else
#	CFLAGS=-Os -Wall -Wstrict-prototypes
#endif

clean:
	dh_testdir
	dh_testroot
	rm -f stamp-*
	-$(MAKE) clean
	rm -rf Lib/test/db_home
	rm -rf build
	rm -rf locales
	-find -name '*.py[co]' | xargs -n 50 rm -f
	dh_clean


common_configure_args = \
		--prefix=/usr \
		--with-fpectl \
		--enable-ipv6 \
		--enable-unicode=ucs2 \
		--without-cxx \
		--enable-shared \
		--srcdir=..

stamp-configure:
	mkdir -p build
	cd build && \
	  CFLAGS="$(CFLAGS)" \
	  ../configure $(common_configure_args)
	touch stamp-configure

build: stamp-build
stamp-build: stamp-configure
	dh_testdir

	OPT="$(CFLAGS) -DNDEBUG" $(MAKE) -C build
	OPT="$(CFLAGS) -DNDEBUG" $(MAKE) -C build lib$(PYTHON).so
	touch stamp-build

install: build stamp-install
stamp-install: stamp-build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	$(MAKE) -C build install DESTDIR=$(CURDIR)/$(d_base)

	# remove files that won't be packaged
	# ===================================
	#
	rm -rf	$(d_base)/usr/bin/smtpd.py \
		$(d_base)/usr/bin/idle \
		$(d_base)/$(scriptdir)/idlelib \
		$(d_base)/$(scriptdir)/lib-tk \
		$(d_base)/$(scriptdir)/lib-old \
		$(d_base)/$(scriptdir)/bsddb \
		$(d_base)/$(scriptdir)/test \
		$(d_base)/$(scriptdir)/email/test \
		$(d_base)/$(scriptdir)/xml/{dom,parsers,sax} \
		$(d_base)/$(scriptdir)/aifc.* \
		$(d_base)/$(scriptdir)/audiodev.* \
		$(d_base)/$(scriptdir)/SimpleHTTPServer.* \
		$(d_base)/$(scriptdir)/SimpleXMLRPCServer.* \
		$(d_base)/$(scriptdir)/CGIHTTPServer.* \
		$(d_base)/$(scriptdir)/cgi.* \
		$(d_base)/$(scriptdir)/cgitb.* \
		$(d_base)/$(scriptdir)/dbhash.* \
		$(d_base)/$(scriptdir)/curses \
		$(d_base)/$(scriptdir)/tzparse.* \
		$(d_base)/$(scriptdir)/posixfile.* \
		$(d_base)/$(scriptdir)/DocXMLRPCServer.* \
		$(d_base)/$(scriptdir)/getpass.* \
		$(d_base)/$(scriptdir)/macpath.* \
		$(d_base)/$(scriptdir)/macurl2path.* \
		$(d_base)/$(scriptdir)/mutex.* \
		$(d_base)/$(scriptdir)/netrc.* \
		$(d_base)/$(scriptdir)/nturl2path.* \
		$(d_base)/$(scriptdir)/os2emxpath.* \
		$(d_base)/$(scriptdir)/pty.* \
		$(d_base)/$(scriptdir)/pyclbr.* \
		$(d_base)/$(scriptdir)/regsub.* \
		$(d_base)/$(scriptdir)/rexec.* \
		$(d_base)/$(scriptdir)/rlcompleter.* \
		$(d_base)/$(scriptdir)/robotparser.* \
		$(d_base)/$(scriptdir)/smtpd.* \
		$(d_base)/$(scriptdir)/statcache.* \
		$(d_base)/$(scriptdir)/statvfs.* \
		$(d_base)/$(scriptdir)/stringold.* \
		$(d_base)/$(scriptdir)/subprocess.* \
		$(d_base)/$(scriptdir)/sunaudio.* \
		$(d_base)/$(scriptdir)/sunau.* \
		$(d_base)/$(scriptdir)/symtable.* \
		$(d_base)/$(scriptdir)/tabnanny.* \
		$(d_base)/$(scriptdir)/telnetlib.* \
		$(d_base)/$(scriptdir)/this.* \
		$(d_base)/$(scriptdir)/timeit.* \
		$(d_base)/$(scriptdir)/toaiff.* \
		$(d_base)/$(scriptdir)/trace.* \
		$(d_base)/$(scriptdir)/tty.* \
		$(d_base)/$(scriptdir)/user.* \
		$(d_base)/$(scriptdir)/whrandom.* \
		$(d_base)/$(scriptdir)/xdrlib.* \
		$(d_base)/$(scriptdir)/LICENSE.txt \
		$(d_base)/$(scriptdir)/lib-dynload/rgbimage.so \
		$(d_base)/$(scriptdir)/lib-dynload/rgbimg.so \
		$(d_base)/$(scriptdir)/lib-dynload/audioop.so \
		$(d_base)/$(scriptdir)/lib-dynload/crypt.so \
		$(d_base)/$(scriptdir)/lib-dynload/linuxaudiodev.so \
		$(d_base)/$(scriptdir)/lib-dynload/nis.so \
		$(d_base)/$(scriptdir)/lib-dynload/mmap.so \
		$(d_base)/$(scriptdir)/lib-dynload/readline.so \
		$(d_base)/$(scriptdir)/lib-dynload/ossaudiodev.so \
		$(d_base)/$(scriptdir)/lib-dynload/syslog.so \
		$(d_base)/$(scriptdir)/lib-dynload/termios.so 

	mkdir -p $(d_dev)/$(scriptdir)
	cp -a $(d_base)/$(scriptdir)/* $(d_dev)/$(scriptdir)

	# base
	# ====
	#

	# shared library
	cp -p build/lib$(PYTHON).so.1.0 $(d_base)/usr/lib
	ln -sf lib$(PYTHON).so.1.0 $(d_base)/usr/lib/lib$(PYTHON).so.1
	rm -rf $(d_base)/usr/lib/lib$(PYTHON).so

	# removing development modules from base package
	rm -rf $(d_base)/$(scriptdir)/distutils
	rm -rf $(d_base)/$(scriptdir)/pdb.*
	rm -rf $(d_base)/$(scriptdir)/pydoc.*
	rm -rf $(d_base)/$(scriptdir)/BaseHTTPServer.*
	rm -rf $(d_base)/$(scriptdir)/compile*
	rm -rf $(d_base)/$(scriptdir)/encodings/{cp*,mac_*}
	rm -rf $(d_base)/$(scriptdir)/doctest*
	rm -rf $(d_base)/$(scriptdir)/unittest*
	rm -rf $(d_base)/$(scriptdir)/hotshot
	rm -rf $(d_base)/$(scriptdir)/config
	
	# removing source modules
	find $(d_base)/$(scriptdir) -name "*.py" -type f -exec rm -f {} \;
	find $(d_base)/$(scriptdir) -name "*.pyc" -type f -exec rm -f {} \;

	# creating python24.zip
	mkdir -p $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/site-packages $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/lib-dynload   $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/plat-linux2   $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/site.pyo      $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/os.pyo        $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/posixpath.pyo $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/stat.pyo      $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/UserDict.pyo  $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/copy_reg.pyo  $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/types.pyo     $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/glob.pyo      $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/fnmatch.pyo   $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/{re,sre}.pyo  $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/sre_compile.pyo $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/sre_constants.pyo $(d_base)/usr/lib/tmp
	mv $(d_base)/$(scriptdir)/sre_parse.pyo $(d_base)/usr/lib/tmp
	(cd $(d_base)/$(scriptdir) && zip -0qr ../python24.zip *)
	find $(d_base)/$(scriptdir) -name "*.pyo" -type f -exec rm -f {} \;
	mv $(d_base)/usr/lib/tmp/* $(d_base)/$(scriptdir)
	rmdir $(d_base)/usr/lib/tmp

	# dev
	# ===
	#

	# scripts
	mkdir -p $(d_dev)/usr/bin
	mv $(d_base)/usr/bin/pydoc $(d_dev)/usr/bin/pydoc$(PYVER)

	# manpage
	mkdir -p $(d_dev)/usr/share
	mv $(d_base)/usr/man $(d_dev)/usr/share
	mv $(d_dev)/usr/share/man/man1/python.1 $(d_dev)/usr/share/man/man1/$(PYTHON).1
	ln -sf $(PYTHON).1 $(d_dev)/usr/share/man/man1/python.1

	# shared library
	ln -sf lib$(PYTHON).so.1 $(d_dev)/usr/lib/lib$(PYTHON).so
	ln -sf ../../lib$(PYTHON).so $(d_dev)/$(scriptdir)/config

	# header files
	mv $(d_base)/usr/include $(d_dev)/usr

	# install the Makefile inside development package
	sed -e 's,^CXX *=,CXX=		g++ -pthread,' \
	    -e 's,^RUNSHARED *=.*,RUNSHARED=,' build/Makefile > $(d_dev)/$(scriptdir)/config/Makefile

	# remove modules from development package
	rm -rf $(d_dev)/$(scriptdir)/site-packages
	rm -rf $(d_dev)/$(scriptdir)/lib-dynload
	rm -rf $(d_dev)/$(scriptdir)/plat-linux2
	rm -rf $(d_dev)/$(scriptdir)/config/libpython2.4.a
	rm -rf $(d_dev)/$(scriptdir)/config/python.o

	# removing optimized modules
	rm $(d_dev)/$(scriptdir)/site.pyo
	rm $(d_dev)/$(scriptdir)/os.pyo
	rm $(d_dev)/$(scriptdir)/posixpath.pyo
	rm $(d_dev)/$(scriptdir)/stat.pyo
	rm $(d_dev)/$(scriptdir)/UserDict.pyo
	rm $(d_dev)/$(scriptdir)/copy_reg.pyo
	rm $(d_dev)/$(scriptdir)/types.pyo
	rm $(d_dev)/$(scriptdir)/glob.pyo
	rm $(d_dev)/$(scriptdir)/fnmatch.pyo
	rm $(d_dev)/$(scriptdir)/{re,sre}.pyo
	rm $(d_dev)/$(scriptdir)/sre_compile.pyo
	rm $(d_dev)/$(scriptdir)/sre_constants.pyo
	rm $(d_dev)/$(scriptdir)/sre_parse.pyo


	# cleanups
	# ========
	#

	find $(d_base) $(d_dev) -name CVS | xargs rm -rf
	find $(d_base) $(d_dev) -name .cvsignore | xargs rm -f
	find $(d_base) $(d_dev) -name "*.exe" | xargs rm -f

	# default python
	# ============== 
	#

	(cd $(d_base)/usr/bin && ln -sf python$(PYVER) python)
	mkdir -p $(d_dev)/usr/bin
	ln -sf /usr/lib/python$(PYVER)/pdb.py $(d_dev)/usr/bin/pdb$(PYVER)
	ln -sf pdb$(PYVER) $(d_dev)/usr/bin/pdb
	ln -sf /usr/lib/python$(PYVER)/pydoc.py $(d_dev)/usr/bin/pydoc$(PYVER)
	ln -sf pydoc$(PYVER) $(d_dev)/usr/bin/pydoc
	cp -p Tools/i18n/pygettext.py $(d_dev)/usr/bin/pygettext$(PYVER)
	ln -sf pygettext$(PYVER) $(d_dev)/usr/bin/pygettext

	for i in `find $(d_base) $(d_dev) -type f`; do \
	  sed '1s,#!.*python[^ ]*\(.*\),#!/usr/bin/env $(PYTHON)\1,' $$i > $$i.temp; \
	  if cmp --quiet $$i $$i.temp; then \
	    rm -f $$i.temp; \
	  else \
	    mv -f $$i.temp $$i; \
	    chmod 755 $$i; \
	  fi; \
	done

	touch stamp-install

binary: binary-indep binary-arch
binary-indep: install
	dh_testdir
	dh_testroot
	dh_installdirs
	dh_installexamples
	dh_link
	dh_compress -p$(p_dev) -X.py -X.cls -X.css -X.txt -Xgdbinit
	dh_fixperms
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-arch: install
	dh_testdir
	dh_testroot
	dh_installdirs
	dh_strip
	dh_link
	dh_compress -p$(p_dev) -X.py -X.cls -X.css -X.txt -Xgdbinit
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

.PHONY: configure build clean binary-indep binary-arch binary install
