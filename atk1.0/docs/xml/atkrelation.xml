<refentry id="AtkRelation">
<refmeta>
<refentrytitle role="top_of_page">AtkRelation</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkRelation</refname>
<refpurpose>An object used to describe a relation between a object and one or more
other objects.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="AtkRelation-struct">AtkRelation</link>;
enum        <link linkend="AtkRelationType">AtkRelationType</link>;
<link linkend="AtkRelationType">AtkRelationType</link> <link linkend="atk-relation-type-register">atk_relation_type_register</link>  (const <link linkend="gchar">gchar</link> *name);
const <link linkend="gchar">gchar</link>* <link linkend="atk-relation-type-get-name">atk_relation_type_get_name</link>     (<link linkend="AtkRelationType">AtkRelationType</link> type);
<link linkend="AtkRelationType">AtkRelationType</link> <link linkend="atk-relation-type-for-name">atk_relation_type_for_name</link>  (const <link linkend="gchar">gchar</link> *name);
<link linkend="AtkRelation">AtkRelation</link>* <link linkend="atk-relation-new">atk_relation_new</link>               (<link linkend="AtkObject">AtkObject</link> **targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="AtkRelationType">AtkRelationType</link> relationship);
<link linkend="AtkRelationType">AtkRelationType</link> <link linkend="atk-relation-get-relation-type">atk_relation_get_relation_type</link>
                                            (<link linkend="AtkRelation">AtkRelation</link> *relation);
<link linkend="GPtrArray">GPtrArray</link>*  <link linkend="atk-relation-get-target">atk_relation_get_target</link>         (<link linkend="AtkRelation">AtkRelation</link> *relation);
<link linkend="void">void</link>        <link linkend="atk-relation-add-target">atk_relation_add_target</link>         (<link linkend="AtkRelation">AtkRelation</link> *relation,
                                             <link linkend="AtkObject">AtkObject</link> *target);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----AtkRelation
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="AtkRelation--relation-type">relation-type</link>&quot;        <link linkend="AtkRelationType">AtkRelationType</link>       : Read / Write
  &quot;<link linkend="AtkRelation--target">target</link>&quot;               <link linkend="GValueArray">GValueArray</link>           : Read / Write
</synopsis>
</refsect1>



<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
An AtkRelation describes a relation between an object and one or more
other objects. The actual relations that an object has with other objects
are defined as an AtkRelationSet, which is a set of AtkRelations.


</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="AtkRelation-struct" role="struct"/>AtkRelation</title>
<indexterm><primary>AtkRelation</primary></indexterm><programlisting>typedef struct _AtkRelation AtkRelation;</programlisting>
<para>
The AtkRelation structure should not be accessed directly.

</para></refsect2>
<refsect2>
<title><anchor id="AtkRelationType" role="enum"/>enum AtkRelationType</title>
<indexterm><primary>AtkRelationType</primary></indexterm><programlisting>typedef enum
{
  ATK_RELATION_NULL = 0,
  ATK_RELATION_CONTROLLED_BY,
  ATK_RELATION_CONTROLLER_FOR,
  ATK_RELATION_LABEL_FOR,
  ATK_RELATION_LABELLED_BY,
  ATK_RELATION_MEMBER_OF,
  ATK_RELATION_NODE_CHILD_OF,
  ATK_RELATION_FLOWS_TO,
  ATK_RELATION_FLOWS_FROM,
  ATK_RELATION_SUBWINDOW_OF, 
  ATK_RELATION_EMBEDS, 
  ATK_RELATION_EMBEDDED_BY, 
  ATK_RELATION_POPUP_FOR, 
  ATK_RELATION_PARENT_WINDOW_OF, 
  ATK_RELATION_DESCRIBED_BY,
  ATK_RELATION_DESCRIPTION_FOR,
  ATK_RELATION_LAST_DEFINED
} AtkRelationType;
</programlisting>
<para>
Describes the type of the relation</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><anchor id="ATK-RELATION-NULL:CAPS" role="constant"/><literal>ATK_RELATION_NULL</literal></term>
<listitem><simpara> Not used, represens "no relationship" or an error condition.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-CONTROLLED-BY:CAPS" role="constant"/><literal>ATK_RELATION_CONTROLLED_BY</literal></term>
<listitem><simpara> Indicates an object controlled by one or more target objects.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-CONTROLLER-FOR:CAPS" role="constant"/><literal>ATK_RELATION_CONTROLLER_FOR</literal></term>
<listitem><simpara> Indicates an object is an controller for one or more target objects.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-LABEL-FOR:CAPS" role="constant"/><literal>ATK_RELATION_LABEL_FOR</literal></term>
<listitem><simpara> Indicates an object is a label for one or more target objects.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-LABELLED-BY:CAPS" role="constant"/><literal>ATK_RELATION_LABELLED_BY</literal></term>
<listitem><simpara> Indicates an object is labelled by one or more target objects.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-MEMBER-OF:CAPS" role="constant"/><literal>ATK_RELATION_MEMBER_OF</literal></term>
<listitem><simpara> Indicates an object is a member of a group of one or more target objects.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-NODE-CHILD-OF:CAPS" role="constant"/><literal>ATK_RELATION_NODE_CHILD_OF</literal></term>
<listitem><simpara> Indicates an object is a cell in a treetable which is displayed because a cell in the same column is expanded and identifies that cell.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-FLOWS-TO:CAPS" role="constant"/><literal>ATK_RELATION_FLOWS_TO</literal></term>
<listitem><simpara> Indicates that the object has content that flows logically to another
 AtkObject in a sequential way, (for instance text-flow).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-FLOWS-FROM:CAPS" role="constant"/><literal>ATK_RELATION_FLOWS_FROM</literal></term>
<listitem><simpara> Indicates that the object has content that flows logically from
 another AtkObject in a sequential way, (for instance text-flow).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-SUBWINDOW-OF:CAPS" role="constant"/><literal>ATK_RELATION_SUBWINDOW_OF</literal></term>
<listitem><simpara> Indicates a subwindow attached to a component but otherwise has no connection in  the UI heirarchy to that component.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-EMBEDS:CAPS" role="constant"/><literal>ATK_RELATION_EMBEDS</literal></term>
<listitem><simpara> Indicates that the object visually embeds 
 another object's content, i.e. this object's content flows around 
 another's content.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-EMBEDDED-BY:CAPS" role="constant"/><literal>ATK_RELATION_EMBEDDED_BY</literal></term>
<listitem><simpara> Inverse of <link linkend="ATK-RELATION-EMBEDS:CAPS"><literal>ATK_RELATION_EMBEDS</literal></link>, indicates that
 this object's content is visualy embedded in another object.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-POPUP-FOR:CAPS" role="constant"/><literal>ATK_RELATION_POPUP_FOR</literal></term>
<listitem><simpara> Indicates that an object is a popup for another object.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-PARENT-WINDOW-OF:CAPS" role="constant"/><literal>ATK_RELATION_PARENT_WINDOW_OF</literal></term>
<listitem><simpara> Indicates that an object is a parent window of another object.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-DESCRIBED-BY:CAPS" role="constant"/><literal>ATK_RELATION_DESCRIBED_BY</literal></term>
<listitem><simpara> Indicates that another object provides descriptive information about this object; more verbose than ATK_RELATION_LABELLED_BY.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-DESCRIPTION-FOR:CAPS" role="constant"/><literal>ATK_RELATION_DESCRIPTION_FOR</literal></term>
<listitem><simpara> Indicates that an object provides descriptive information about another object; more verbose than ATK_RELATION_LABEL_FOR.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="ATK-RELATION-LAST-DEFINED:CAPS" role="constant"/><literal>ATK_RELATION_LAST_DEFINED</literal></term>
<listitem><simpara> Not used, this value indicates the end of the enumeration.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-type-register" role="function"/>atk_relation_type_register ()</title>
<indexterm><primary>atk_relation_type_register</primary></indexterm><programlisting><link linkend="AtkRelationType">AtkRelationType</link> atk_relation_type_register  (const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Associate <parameter>name</parameter> with a new <link linkend="AtkRelationType"><type>AtkRelationType</type></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> a name string
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> an <link linkend="AtkRelationType"><type>AtkRelationType</type></link> associated with <parameter>name</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-type-get-name" role="function"/>atk_relation_type_get_name ()</title>
<indexterm><primary>atk_relation_type_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* atk_relation_type_get_name     (<link linkend="AtkRelationType">AtkRelationType</link> type);</programlisting>
<para>
Gets the description string describing the <link linkend="AtkRelationType"><type>AtkRelationType</type></link> <parameter>type</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="AtkRelationType"><type>AtkRelationType</type></link> whose name is required
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the string describing the AtkRelationType
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-type-for-name" role="function"/>atk_relation_type_for_name ()</title>
<indexterm><primary>atk_relation_type_for_name</primary></indexterm><programlisting><link linkend="AtkRelationType">AtkRelationType</link> atk_relation_type_for_name  (const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Get the <link linkend="AtkRelationType"><type>AtkRelationType</type></link> type corresponding to a relation name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> a string which is the (non-localized) name of an ATK relation type.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="AtkRelationType"><type>AtkRelationType</type></link> enumerated type corresponding to the specified name,
         or <link linkend="ATK-RELATION-NULL:CAPS"><type>ATK_RELATION_NULL</type></link> if no matching relation type is found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-new" role="function"/>atk_relation_new ()</title>
<indexterm><primary>atk_relation_new</primary></indexterm><programlisting><link linkend="AtkRelation">AtkRelation</link>* atk_relation_new               (<link linkend="AtkObject">AtkObject</link> **targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="AtkRelationType">AtkRelationType</link> relationship);</programlisting>
<para>
Create a new relation for the specified key and the specified list
of targets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara> an array of pointers to <link linkend="AtkObjects"><type>AtkObjects</type></link>  
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_targets</parameter>&nbsp;:</term>
<listitem><simpara> number of <link linkend="AtkObjects"><type>AtkObjects</type></link> pointed to by <parameter>targets</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>relationship</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkRelationType"><type>AtkRelationType</type></link> with which to create the new
 <link linkend="AtkRelation"><type>AtkRelation</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a pointer to a new <link linkend="AtkRelation"><type>AtkRelation</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-get-relation-type" role="function"/>atk_relation_get_relation_type ()</title>
<indexterm><primary>atk_relation_get_relation_type</primary></indexterm><programlisting><link linkend="AtkRelationType">AtkRelationType</link> atk_relation_get_relation_type
                                            (<link linkend="AtkRelation">AtkRelation</link> *relation);</programlisting>
<para>
Gets the type of <parameter>relation</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>relation</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkRelation"><type>AtkRelation</type></link> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the type of <parameter>relation</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-get-target" role="function"/>atk_relation_get_target ()</title>
<indexterm><primary>atk_relation_get_target</primary></indexterm><programlisting><link linkend="GPtrArray">GPtrArray</link>*  atk_relation_get_target         (<link linkend="AtkRelation">AtkRelation</link> *relation);</programlisting>
<para>
Gets the target list of <parameter>relation</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>relation</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkRelation"><type>AtkRelation</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the target list of <parameter>relation</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-add-target" role="function" condition="since:ATK 1.9"/>atk_relation_add_target ()</title>
<indexterm role="ATK 1.9"><primary>atk_relation_add_target</primary></indexterm><programlisting><link linkend="void">void</link>        atk_relation_add_target         (<link linkend="AtkRelation">AtkRelation</link> *relation,
                                             <link linkend="AtkObject">AtkObject</link> *target);</programlisting>
<para>
Adds the specified AtkObject to the target for the relation, if it is
not already present.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>relation</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkRelation"><type>AtkRelation</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkObject"><type>AtkObject</type></link>
</simpara></listitem></varlistentry>
</variablelist><para>Since  ATK 1.9
</para></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="AtkRelation--relation-type"/>The &quot;<literal>relation-type</literal>&quot; property</title>
<indexterm><primary>AtkRelation:relation-type</primary></indexterm><programlisting>  &quot;relation-type&quot;        <link linkend="AtkRelationType">AtkRelationType</link>       : Read / Write</programlisting>
<para>The type of the relation.</para><para>Default value: ATK_RELATION_NULL</para>
</refsect2>
<refsect2><title><anchor id="AtkRelation--target"/>The &quot;<literal>target</literal>&quot; property</title>
<indexterm><primary>AtkRelation:target</primary></indexterm><programlisting>  &quot;target&quot;               <link linkend="GValueArray">GValueArray</link>           : Read / Write</programlisting>
<para>An array of the targets for the relation.</para></refsect2>

</refsect1>




</refentry>
