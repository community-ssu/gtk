<refentry id="AtkEditableText">
<refmeta>
<refentrytitle>AtkEditableText</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkEditableText</refname><refpurpose>The ATK interface implemented by components containing user-editable text content.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



            <link linkend="AtkEditableText-struct">AtkEditableText</link>;
<link linkend="gboolean">gboolean</link>    <link linkend="atk-editable-text-set-run-attributes">atk_editable_text_set_run_attributes</link>
                                            (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="AtkAttributeSet">AtkAttributeSet</link> *attrib_set,
                                             <link linkend="gint">gint</link> start_offset,
                                             <link linkend="gint">gint</link> end_offset);
<link linkend="void">void</link>        <link linkend="atk-editable-text-set-text-contents">atk_editable_text_set_text_contents</link>
                                            (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             const <link linkend="gchar">gchar</link> *string);
<link linkend="void">void</link>        <link linkend="atk-editable-text-insert-text">atk_editable_text_insert_text</link>   (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             const <link linkend="gchar">gchar</link> *string,
                                             <link linkend="gint">gint</link> length,
                                             <link linkend="gint">gint</link> *position);
<link linkend="void">void</link>        <link linkend="atk-editable-text-copy-text">atk_editable_text_copy_text</link>     (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);
<link linkend="void">void</link>        <link linkend="atk-editable-text-cut-text">atk_editable_text_cut_text</link>      (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);
<link linkend="void">void</link>        <link linkend="atk-editable-text-delete-text">atk_editable_text_delete_text</link>   (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);
<link linkend="void">void</link>        <link linkend="atk-editable-text-paste-text">atk_editable_text_paste_text</link>    (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> position);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GInterface">GInterface</link>
   +----AtkEditableText
</synopsis>

</refsect1>




<refsect1>
<title>Known Implementations</title>
<para>
AtkEditableText is implemented by
 <link linkend="AtkNoOpObject">AtkNoOpObject</link>.</para>

</refsect1>




<refsect1>
<title>Description</title>
<para>
<link linkend="AtkEditableText"><type>AtkEditableText</type></link> should be implemented by UI components which contain
text which the user can edit, via the <link linkend="AtkObject"><type>AtkObject</type></link> corresponding to that
component (see <link linkend="AtkObject"><type>AtkObject</type></link>).
</para>
<para>
<link linkend="AtkEditableText"><type>AtkEditableText</type></link> is a subclass of <link linkend="AtkText"><type>AtkText</type></link>, and as such, an object which
implements <link linkend="AtkEditableText"><type>AtkEditableText</type></link> is by definition an <link linkend="AtkText"><type>AtkText</type></link> implementor as well.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AtkEditableText-struct"/>AtkEditableText</title>
<indexterm><primary>AtkEditableText</primary></indexterm><programlisting>typedef struct _AtkEditableText AtkEditableText;</programlisting>
<para>
The AtkEditableText structure does not contain any fields.

</para></refsect2>
<refsect2>
<title><anchor id="atk-editable-text-set-run-attributes"/>atk_editable_text_set_run_attributes ()</title>
<indexterm><primary>atk_editable_text_set_run_attributes</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_editable_text_set_run_attributes
                                            (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="AtkAttributeSet">AtkAttributeSet</link> *attrib_set,
                                             <link linkend="gint">gint</link> start_offset,
                                             <link linkend="gint">gint</link> end_offset);</programlisting>
<para>
Sets the attributes for a specified range. See the ATK_ATTRIBUTE
macros (such as <link linkend="ATK-ATTRIBUTE-LEFT-MARGIN:CAPS"><type>ATK_ATTRIBUTE_LEFT_MARGIN</type></link>) for examples of attributes 
that can be set. Note that other attributes that do not have corresponding
ATK_ATTRIBUTE macros may also be set for certain text widgets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkEditableText"><type>AtkEditableText</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attrib_set</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkAttributeSet"><type>AtkAttributeSet</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_offset</parameter>&nbsp;:</term>
<listitem><simpara> start of range in which to set attributes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end_offset</parameter>&nbsp;:</term>
<listitem><simpara> end of range in which to set attributes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <literal>TRUE</literal> if attributes successfully set for the specified
range, otherwise <literal>FALSE</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-editable-text-set-text-contents"/>atk_editable_text_set_text_contents ()</title>
<indexterm><primary>atk_editable_text_set_text_contents</primary></indexterm><programlisting><link linkend="void">void</link>        atk_editable_text_set_text_contents
                                            (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             const <link linkend="gchar">gchar</link> *string);</programlisting>
<para>
Set text contents of <parameter>text</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkEditableText"><type>AtkEditableText</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara> string to set for text contents of <parameter>text</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-editable-text-insert-text"/>atk_editable_text_insert_text ()</title>
<indexterm><primary>atk_editable_text_insert_text</primary></indexterm><programlisting><link linkend="void">void</link>        atk_editable_text_insert_text   (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             const <link linkend="gchar">gchar</link> *string,
                                             <link linkend="gint">gint</link> length,
                                             <link linkend="gint">gint</link> *position);</programlisting>
<para>
Insert text at a given position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkEditableText"><type>AtkEditableText</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara> the text to insert
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&nbsp;:</term>
<listitem><simpara> the length of text to insert, in bytes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> The caller initializes this to 
the position at which to insert the text. After the call it
points at the position after the newly inserted text.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-editable-text-copy-text"/>atk_editable_text_copy_text ()</title>
<indexterm><primary>atk_editable_text_copy_text</primary></indexterm><programlisting><link linkend="void">void</link>        atk_editable_text_copy_text     (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);</programlisting>
<para>
Copy text from <parameter>start_pos</parameter> up to, but not including <parameter>end_pos</parameter> 
to the clipboard.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkEditableText"><type>AtkEditableText</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_pos</parameter>&nbsp;:</term>
<listitem><simpara> start position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end_pos</parameter>&nbsp;:</term>
<listitem><simpara> end position
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-editable-text-cut-text"/>atk_editable_text_cut_text ()</title>
<indexterm><primary>atk_editable_text_cut_text</primary></indexterm><programlisting><link linkend="void">void</link>        atk_editable_text_cut_text      (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);</programlisting>
<para>
Copy text from <parameter>start_pos</parameter> up to, but not including <parameter>end_pos</parameter>
to the clipboard and then delete from the widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkEditableText"><type>AtkEditableText</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_pos</parameter>&nbsp;:</term>
<listitem><simpara> start position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end_pos</parameter>&nbsp;:</term>
<listitem><simpara> end position
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-editable-text-delete-text"/>atk_editable_text_delete_text ()</title>
<indexterm><primary>atk_editable_text_delete_text</primary></indexterm><programlisting><link linkend="void">void</link>        atk_editable_text_delete_text   (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);</programlisting>
<para>
Delete text <parameter>start_pos</parameter> up to, but not including <parameter>end_pos</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkEditableText"><type>AtkEditableText</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_pos</parameter>&nbsp;:</term>
<listitem><simpara> start position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end_pos</parameter>&nbsp;:</term>
<listitem><simpara> end position
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-editable-text-paste-text"/>atk_editable_text_paste_text ()</title>
<indexterm><primary>atk_editable_text_paste_text</primary></indexterm><programlisting><link linkend="void">void</link>        atk_editable_text_paste_text    (<link linkend="AtkEditableText">AtkEditableText</link> *text,
                                             <link linkend="gint">gint</link> position);</programlisting>
<para>
Paste text from clipboard to specified <parameter>position</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkEditableText"><type>AtkEditableText</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> position to paste
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
<link linkend="AtkText"><type>AtkText</type></link>
</para>
</refsect1>

</refentry>
