<refentry id="AtkSelection">
<refmeta>
<refentrytitle role="top_of_page">AtkSelection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkSelection</refname>
<refpurpose>
The ATK interface implemented by container objects whose <link linkend="AtkObject"><type>AtkObject</type></link> children
can be selected.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="AtkSelection-struct">AtkSelection</link>;
<link linkend="gboolean">gboolean</link>    <link linkend="atk-selection-add-selection">atk_selection_add_selection</link>     (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-selection-clear-selection">atk_selection_clear_selection</link>   (<link linkend="AtkSelection">AtkSelection</link> *selection);
<link linkend="AtkObject">AtkObject</link>*  <link linkend="atk-selection-ref-selection">atk_selection_ref_selection</link>     (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);
<link linkend="gint">gint</link>        <link linkend="atk-selection-get-selection-count">atk_selection_get_selection_count</link>
                                            (<link linkend="AtkSelection">AtkSelection</link> *selection);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-selection-is-child-selected">atk_selection_is_child_selected</link> (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-selection-remove-selection">atk_selection_remove_selection</link>  (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-selection-select-all-selection">atk_selection_select_all_selection</link>
                                            (<link linkend="AtkSelection">AtkSelection</link> *selection);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GInterface">GInterface</link>
   +----AtkSelection
</synopsis>

</refsect1>




<refsect1 role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
AtkSelection is implemented by
 <link linkend="AtkNoOpObject">AtkNoOpObject</link>.</para>

</refsect1>


<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

&quot;<link linkend="AtkSelection-selection-changed">selection-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="AtkSelection">AtkSelection</link> *atkselection,
                                            <link linkend="gpointer">gpointer</link>      user_data)         : Run last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="AtkSelection"><type>AtkSelection</type></link> should be implemented by UI components with children which
are exposed by <link linkend="atk-object-ref-child"><type>atk_object_ref_child</type></link> and <link linkend="atk-object-get-n-children"><type>atk_object_get_n_children</type></link>, if
the use of the parent UI component ordinarily involves selection of one
or more of the objects corresponding to those <link linkend="AtkObject"><type>AtkObject</type></link> children - for
example, selectable lists.
</para>
<para>
Note that other types of "selection" (for instance text selection) are
accomplished a other ATK interfaces - <link linkend="AtkSelection"><type>AtkSelection</type></link> is limited to the
selection/deselection of children.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="AtkSelection-struct" role="struct"/>AtkSelection</title>
<indexterm><primary>AtkSelection</primary></indexterm><programlisting>typedef struct _AtkSelection AtkSelection;</programlisting>
<para>
The AtkAction structure does not contain any fields.

</para></refsect2>
<refsect2>
<title><anchor id="atk-selection-add-selection" role="function"/>atk_selection_add_selection ()</title>
<indexterm><primary>atk_selection_add_selection</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_selection_add_selection     (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);</programlisting>
<para>
Adds the specified accessible child of the object to the
object's selection.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkSelectionIface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="gint"><type>gint</type></link> specifying the child index.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if success, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-selection-clear-selection" role="function"/>atk_selection_clear_selection ()</title>
<indexterm><primary>atk_selection_clear_selection</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_selection_clear_selection   (<link linkend="AtkSelection">AtkSelection</link> *selection);</programlisting>
<para>
Clears the selection in the object so that no children in the object
are selected.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkSelectionIface
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if success, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-selection-ref-selection" role="function"/>atk_selection_ref_selection ()</title>
<indexterm><primary>atk_selection_ref_selection</primary></indexterm><programlisting><link linkend="AtkObject">AtkObject</link>*  atk_selection_ref_selection     (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);</programlisting>
<para>
Gets a reference to the accessible object representing the specified 
selected child of the object.
Note: callers should not rely on <link linkend="NULL:CAPS"><literal>NULL</literal></link> or on a zero value for
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
<link linkend="atk-get-accessible-value"><function>atk_get_accessible_value()</function></link> convenience method.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkSelectionIface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="gint"><type>gint</type></link> specifying the index in the selection set.  (e.g. the
ith selection as opposed to the ith child).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> an <link linkend="AtkObject"><type>AtkObject</type></link> representing the selected accessible , or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
if <parameter>selection</parameter> does not implement this interface.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-selection-get-selection-count" role="function"/>atk_selection_get_selection_count ()</title>
<indexterm><primary>atk_selection_get_selection_count</primary></indexterm><programlisting><link linkend="gint">gint</link>        atk_selection_get_selection_count
                                            (<link linkend="AtkSelection">AtkSelection</link> *selection);</programlisting>
<para>
Gets the number of accessible children currently selected.
Note: callers should not rely on <link linkend="NULL:CAPS"><literal>NULL</literal></link> or on a zero value for
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
<link linkend="atk-get-accessible-value"><function>atk_get_accessible_value()</function></link> convenience method.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkSelectionIface
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a gint representing the number of items selected, or 0
if <parameter>selection</parameter> does not implement this interface.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-selection-is-child-selected" role="function"/>atk_selection_is_child_selected ()</title>
<indexterm><primary>atk_selection_is_child_selected</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_selection_is_child_selected (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);</programlisting>
<para>
Determines if the current child of this object is selected
Note: callers should not rely on <link linkend="NULL:CAPS"><literal>NULL</literal></link> or on a zero value for
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
<link linkend="atk-get-accessible-value"><function>atk_get_accessible_value()</function></link> convenience method.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkSelectionIface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="gint"><type>gint</type></link> specifying the child index.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a gboolean representing the specified child is selected, or 0
if <parameter>selection</parameter> does not implement this interface.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-selection-remove-selection" role="function"/>atk_selection_remove_selection ()</title>
<indexterm><primary>atk_selection_remove_selection</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_selection_remove_selection  (<link linkend="AtkSelection">AtkSelection</link> *selection,
                                             <link linkend="gint">gint</link> i);</programlisting>
<para>
Removes the specified child of the object from the object's selection.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkSelectionIface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="gint"><type>gint</type></link> specifying the index in the selection set.  (e.g. the
ith selection as opposed to the ith child).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if success, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-selection-select-all-selection" role="function"/>atk_selection_select_all_selection ()</title>
<indexterm><primary>atk_selection_select_all_selection</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_selection_select_all_selection
                                            (<link linkend="AtkSelection">AtkSelection</link> *selection);</programlisting>
<para>
Causes every child of the object to be selected if the object
supports multiple selections.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkSelectionIface
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if success, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="AtkSelection-selection-changed"/>The &quot;selection-changed&quot; signal</title>
<indexterm><primary>AtkSelection::selection-changed</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="AtkSelection">AtkSelection</link> *atkselection,
                                            <link linkend="gpointer">gpointer</link>      user_data)         : Run last</programlisting>
<para>
The "selection-changed" signal is emitted by an object which implements 
AtkSelection interface when the selection changes.
</para><variablelist role="params">
<varlistentry><term><parameter>atkselection</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<link linkend="AtkText"><type>AtkText</type></link>
</para>
</refsect1>

</refentry>
