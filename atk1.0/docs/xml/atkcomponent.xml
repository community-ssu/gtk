<refentry id="AtkComponent">
<refmeta>
<refentrytitle role="top_of_page">AtkComponent</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkComponent</refname>
<refpurpose>The ATK interface provided by UI components which occupy a physical area on
the screen.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="AtkComponent-struct">AtkComponent</link>;
<link linkend="guint">guint</link>       <link linkend="atk-component-add-focus-handler">atk_component_add_focus_handler</link> (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="AtkFocusHandler">AtkFocusHandler</link> handler);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-component-contains">atk_component_contains</link>          (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);
<link linkend="void">void</link>        <link linkend="atk-component-get-extents">atk_component_get_extents</link>       (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> *x,
                                             <link linkend="gint">gint</link> *y,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);
<link linkend="AtkLayer">AtkLayer</link>    <link linkend="atk-component-get-layer">atk_component_get_layer</link>         (<link linkend="AtkComponent">AtkComponent</link> *component);
<link linkend="gint">gint</link>        <link linkend="atk-component-get-mdi-zorder">atk_component_get_mdi_zorder</link>    (<link linkend="AtkComponent">AtkComponent</link> *component);
<link linkend="void">void</link>        <link linkend="atk-component-get-position">atk_component_get_position</link>      (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> *x,
                                             <link linkend="gint">gint</link> *y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);
<link linkend="void">void</link>        <link linkend="atk-component-get-size">atk_component_get_size</link>          (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-component-grab-focus">atk_component_grab_focus</link>        (<link linkend="AtkComponent">AtkComponent</link> *component);
<link linkend="AtkObject">AtkObject</link>*  <link linkend="atk-component-ref-accessible-at-point">atk_component_ref_accessible_at_point</link>
                                            (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);
<link linkend="void">void</link>        <link linkend="atk-component-remove-focus-handler">atk_component_remove_focus_handler</link>
                                            (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="guint">guint</link> handler_id);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-component-set-extents">atk_component_set_extents</link>       (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-component-set-position">atk_component_set_position</link>      (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-component-set-size">atk_component_set_size</link>          (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height);
<link linkend="gdouble">gdouble</link>     <link linkend="atk-component-get-alpha">atk_component_get_alpha</link>         (<link linkend="AtkComponent">AtkComponent</link> *component);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GInterface">GInterface</link>
   +----AtkComponent
</synopsis>

</refsect1>




<refsect1 role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
AtkComponent is implemented by
 <link linkend="AtkNoOpObject">AtkNoOpObject</link>.</para>

</refsect1>


<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

&quot;<link linkend="AtkComponent-bounds-changed">bounds-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="AtkComponent">AtkComponent</link> *atkcomponent,
                                            <link linkend="AtkRectangle">AtkRectangle</link> *arg1,
                                            <link linkend="gpointer">gpointer</link>      user_data)         : Run last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="AtkComponent"><type>AtkComponent</type></link> should be implemented by most if not all UI elements with
an actual on-screen presence, i.e. components which can be said to have
a screen-coordinate bounding box.  Virtually all widgets will need to
have <link linkend="AtkComponent"><type>AtkComponent</type></link> implementations provided for their corresponding
<link linkend="AtkObject"><type>AtkObject</type></link> class.  In short, only UI elements which are *not* GUI
elements will omit this ATK interface.
</para>
<para>
A possible exception might be textual information with a transparent
background, in which case text glyph bounding box information is
provided by <link linkend="AtkText"><type>AtkText</type></link>.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="AtkComponent-struct" role="struct"/>AtkComponent</title>
<indexterm><primary>AtkComponent</primary></indexterm><programlisting>typedef struct _AtkComponent AtkComponent;</programlisting>
<para>
The AtkComponent structure does not contain any fields.

</para></refsect2>
<refsect2>
<title><anchor id="atk-component-add-focus-handler" role="function"/>atk_component_add_focus_handler ()</title>
<indexterm><primary>atk_component_add_focus_handler</primary></indexterm><programlisting><link linkend="guint">guint</link>       atk_component_add_focus_handler (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="AtkFocusHandler">AtkFocusHandler</link> handler);</programlisting>
<para>
Add the specified handler to the set of functions to be called 
when this object receives focus events (in or out). If the handler is
already added it is not added again</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="AtkComponent"><type>AtkComponent</type></link> to attach the <parameter>handler</parameter> to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>handler</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="AtkFocusHandler"><type>AtkFocusHandler</type></link> to be attached to <parameter>component</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a handler id which can be used in atk_component_remove_focus_handler
or zero if the handler was already added.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-contains" role="function"/>atk_component_contains ()</title>
<indexterm><primary>atk_component_contains</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_component_contains          (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);</programlisting>
<para>
Checks whether the specified point is within the extent of the <parameter>component</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>coord_type</parameter>&nbsp;:</term>
<listitem><simpara> specifies whether the coordinates are relative to the screen
or to the components top level window
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> indicating whether the specified point is within
the extent of the <parameter>component</parameter> or not
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-get-extents" role="function"/>atk_component_get_extents ()</title>
<indexterm><primary>atk_component_get_extents</primary></indexterm><programlisting><link linkend="void">void</link>        atk_component_get_extents       (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> *x,
                                             <link linkend="gint">gint</link> *y,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);</programlisting>
<para>
Gets the rectangle which gives the extent of the <parameter>component</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put width
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put height
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>coord_type</parameter>&nbsp;:</term>
<listitem><simpara> specifies whether the coordinates are relative to the screen
or to the components top level window
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-get-layer" role="function"/>atk_component_get_layer ()</title>
<indexterm><primary>atk_component_get_layer</primary></indexterm><programlisting><link linkend="AtkLayer">AtkLayer</link>    atk_component_get_layer         (<link linkend="AtkComponent">AtkComponent</link> *component);</programlisting>
<para>
Gets the layer of the component.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> an <link linkend="AtkLayer"><type>AtkLayer</type></link> which is the layer of the component
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-get-mdi-zorder" role="function"/>atk_component_get_mdi_zorder ()</title>
<indexterm><primary>atk_component_get_mdi_zorder</primary></indexterm><programlisting><link linkend="gint">gint</link>        atk_component_get_mdi_zorder    (<link linkend="AtkComponent">AtkComponent</link> *component);</programlisting>
<para>
Gets the zorder of the component. The value G_MININT will be returned 
if the layer of the component is not ATK_LAYER_MDI or ATK_LAYER_WINDOW.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a gint which is the zorder of the component, i.e. the depth at 
which the component is shown in relation to other components in the same 
container.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-get-position" role="function"/>atk_component_get_position ()</title>
<indexterm><primary>atk_component_get_position</primary></indexterm><programlisting><link linkend="void">void</link>        atk_component_get_position      (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> *x,
                                             <link linkend="gint">gint</link> *y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);</programlisting>
<para>
Gets the position of <parameter>component</parameter> in the form of 
a point specifying <parameter>component</parameter>'s top-left corner.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put x coordinate position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put y coordinate position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>coord_type</parameter>&nbsp;:</term>
<listitem><simpara> specifies whether the coordinates are relative to the screen
or to the components top level window
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-get-size" role="function"/>atk_component_get_size ()</title>
<indexterm><primary>atk_component_get_size</primary></indexterm><programlisting><link linkend="void">void</link>        atk_component_get_size          (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height);</programlisting>
<para>
Gets the size of the <parameter>component</parameter> in terms of width and height.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put width of <parameter>component</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> address of <link linkend="gint"><type>gint</type></link> to put height of <parameter>component</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-grab-focus" role="function"/>atk_component_grab_focus ()</title>
<indexterm><primary>atk_component_grab_focus</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_component_grab_focus        (<link linkend="AtkComponent">AtkComponent</link> *component);</programlisting>
<para>
Grabs focus for this <parameter>component</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-ref-accessible-at-point" role="function"/>atk_component_ref_accessible_at_point ()</title>
<indexterm><primary>atk_component_ref_accessible_at_point</primary></indexterm><programlisting><link linkend="AtkObject">AtkObject</link>*  atk_component_ref_accessible_at_point
                                            (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);</programlisting>
<para>
Gets a reference to the accessible child, if one exists, at the
coordinate point specified by <parameter>x</parameter> and <parameter>y</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>coord_type</parameter>&nbsp;:</term>
<listitem><simpara> specifies whether the coordinates are relative to the screen
or to the components top level window
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a reference to the accessible child, if one exists
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-remove-focus-handler" role="function"/>atk_component_remove_focus_handler ()</title>
<indexterm><primary>atk_component_remove_focus_handler</primary></indexterm><programlisting><link linkend="void">void</link>        atk_component_remove_focus_handler
                                            (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="guint">guint</link> handler_id);</programlisting>
<para>
Remove the handler specified by <parameter>handler_id</parameter> from the list of
functions to be executed when this object receives focus events 
(in or out).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="AtkComponent"><type>AtkComponent</type></link> to remove the focus handler from
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>handler_id</parameter>&nbsp;:</term>
<listitem><simpara> the handler id of the focus handler to be removed
from <parameter>component</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-set-extents" role="function"/>atk_component_set_extents ()</title>
<indexterm><primary>atk_component_set_extents</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_component_set_extents       (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);</programlisting>
<para>
Sets the extents of <parameter>component</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width to set for <parameter>component</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height to set for <parameter>component</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>coord_type</parameter>&nbsp;:</term>
<listitem><simpara> specifies whether the coordinates are relative to the screen
or to the components top level window
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> whether the extents were set or not
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-set-position" role="function"/>atk_component_set_position ()</title>
<indexterm><primary>atk_component_set_position</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_component_set_position      (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="AtkCoordType">AtkCoordType</link> coord_type);</programlisting>
<para>
Sets the postition of <parameter>component</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>coord_type</parameter>&nbsp;:</term>
<listitem><simpara> specifies whether the coordinates are relative to the screen
or to the components top level window
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> whether or not the position was set or not
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-set-size" role="function"/>atk_component_set_size ()</title>
<indexterm><primary>atk_component_set_size</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    atk_component_set_size          (<link linkend="AtkComponent">AtkComponent</link> *component,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height);</programlisting>
<para>
Set the size of the <parameter>component</parameter> in terms of width and height.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width to set for <parameter>component</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height to set for <parameter>component</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> whether the size was set or not
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-component-get-alpha" role="function" condition="since:ATK 1.12"/>atk_component_get_alpha ()</title>
<indexterm role="ATK 1.12"><primary>atk_component_get_alpha</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>     atk_component_get_alpha         (<link linkend="AtkComponent">AtkComponent</link> *component);</programlisting>
<para>
Returns the alpha value (i.e. the opacity) for this
<parameter>component</parameter>, on a scale from 0 (fully transparent) to 1.0
(fully opaque).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkComponent"><type>AtkComponent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> An alpha value from 0 to 1.0, inclusive.
</simpara></listitem></varlistentry>
</variablelist><para>Since  ATK 1.12
</para></refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="AtkComponent-bounds-changed"/>The &quot;bounds-changed&quot; signal</title>
<indexterm><primary>AtkComponent::bounds-changed</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="AtkComponent">AtkComponent</link> *atkcomponent,
                                            <link linkend="AtkRectangle">AtkRectangle</link> *arg1,
                                            <link linkend="gpointer">gpointer</link>      user_data)         : Run last</programlisting>
<para>
The 'bounds-changed" signal is emitted when the bposition or size of the 
a component changes.
</para><variablelist role="params">
<varlistentry><term><parameter>atkcomponent</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>The AtkRectangle giving the new position and size.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
