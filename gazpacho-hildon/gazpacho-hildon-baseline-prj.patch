diff -Nur gazpacho-hildon/COPYING gazpacho-hildon-sicem/COPYING
--- gazpacho-hildon/COPYING	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/COPYING	2006-05-04 10:56:40.000000000 +0300
@@ -0,0 +1,459 @@
+		  GNU LESSER GENERAL PUBLIC LICENSE
+		       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+ 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it becomes
+a de-facto standard.  To achieve this, non-free programs must be
+allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+		  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control compilation
+and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+  
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at
+    least three years, to give the same user the materials
+    specified in Subsection 6a, above, for a charge no more
+    than the cost of performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any
+particular circumstance, the balance of the section is intended to apply,
+and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License may add
+an explicit geographical distribution limitation excluding those countries,
+so that distribution is permitted only in or among countries not thus
+excluded.  In such case, this License incorporates the limitation as if
+written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+			    NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
diff -Nur gazpacho-hildon/debian/files gazpacho-hildon-sicem/debian/files
--- gazpacho-hildon/debian/files	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/files	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1 @@
+gazpacho-hildon_0.1.2-5_all.deb libs optional
diff -Nur gazpacho-hildon/debian/gazpacho-hildon/DEBIAN/control gazpacho-hildon-sicem/debian/gazpacho-hildon/DEBIAN/control
--- gazpacho-hildon/debian/gazpacho-hildon/DEBIAN/control	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/gazpacho-hildon/DEBIAN/control	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1,9 @@
+Package: gazpacho-hildon
+Version: 0.1.2-5
+Section: libs
+Priority: optional
+Architecture: all
+Depends: gazpacho-loader (>= 0.6.2), python2.4-hildon (>= 0.5.2)
+Installed-Size: 224
+Maintainer: Erik Karlsson <erik.b.karlsson@nokia.com>
+Description: Hildon support for Gazpacho
diff -Nur gazpacho-hildon/debian/gazpacho-hildon/DEBIAN/md5sums gazpacho-hildon-sicem/debian/gazpacho-hildon/DEBIAN/md5sums
--- gazpacho-hildon/debian/gazpacho-hildon/DEBIAN/md5sums	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/gazpacho-hildon/DEBIAN/md5sums	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1,36 @@
+18c584833d8acfca6db3057f2f163c20  usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/libs.py
+5f139aef80270a533be87eafdb8cc4d2  usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/lgpl.py
+197ef69148df763bb936cdf6529c3d22  usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/__init__.py
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/vvolumebar.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/timeeditor.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/caption.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/timepicker.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/hvolumebar.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/numbereditor.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/appview.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/findtoolbar.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/telephoneeditor.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/filechooserdialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/grid.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/colorselector.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/weekdaypicker.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/getpassworddialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/filedetailsdialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/controlbar.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/sortdialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/colorbutton.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/app.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/dateeditor.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/seekbar.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/insertobjectdialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/calendarpopup.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/filehandlingnote.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/fontselectiondialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/rangeeditor.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/setpassworddialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/wizarddialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/namepassworddialog.png
+87ae84753f8a903a191e41fec6ef02ff  usr/share/gazpacho/resources/hildonwidgets/note.png
+a4bde27b1fd99e739fbbb1f380191efb  usr/share/gazpacho/catalogs/hildonwidgets.xml
+14f78782072c38699f146f6bdc22f80b  usr/share/doc/gazpacho-hildon/changelog.Debian.gz
+68b329da9893e34099c7d8ad5cb9c940  usr/share/doc/gazpacho-hildon/copyright
diff -Nur gazpacho-hildon/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/__init__.py gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/__init__.py
--- gazpacho-hildon/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/__init__.py	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/__init__.py	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1,9 @@
+# Copyright (C) 2005, 2006 Nokia Corporation
+
+# The root library is the name of the library Gazpacho will import to create
+# the widgets. e.g import gtk
+root_library = 'hildon'
+
+# When loading the widget class from the catalog files we strip off this prefix
+# for every widget
+widget_prefix = 'Hildon'
diff -Nur gazpacho-hildon/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/lgpl.py gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/lgpl.py
--- gazpacho-hildon/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/lgpl.py	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/lgpl.py	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1,467 @@
+# Copyright (C) 2005,2006 Nokia Corporation
+#
+# Adaptors for Hildon-lgpl widgets
+#
+
+import gettext
+
+import xml.dom.minidom
+from xml.sax.saxutils import escape, unescape
+
+import gtk
+import gobject
+
+import hildon
+
+from gazpacho.widgetadaptor import WidgetAdaptor
+from gazpacho.widget import Widget, load_child, load_widget_from_gtk_widget
+from gazpacho.context import Context
+from gazpacho.placeholder import Placeholder
+from gazpacho.uieditor import UIEditor, MenuBarUIEditor, AddMenuDialog, AddMenuitemDialog
+from gazpacho.properties import prop_registry, TransparentProperty, StringType, IntType, CustomProperty, PropertyCustomEditor, ObjectType, PropertyError
+from gazpacho.editor import PropertyCustomEditorWithDialog, EditorPropertyText, PropertyEditorDialog
+from gazpacho.util import unselect_when_press_escape, xml_filter_nodes
+from gazpacho.widgetregistry import widget_registry
+from gazpacho.loader.custom import adapter_registry
+
+_ = gettext.gettext
+
+
+class AppAdaptor(WidgetAdaptor):
+    def post_create (self, context, app, interactive=True):
+        # Resize the window to target size
+        app.set_size_request(672,396)
+
+    def fill_empty(self, context, widget):
+        widget.add(context.create_placeholder())
+
+    def replace_child(self, context, current, new, container):
+        if not isinstance(current, hildon.AppView):
+    		    container.remove(current)
+        container.add(new)
+
+class AppViewAdaptor(WidgetAdaptor):
+    def post_create (self, context, appview, interactive=True):
+        gwidget = Widget.from_widget(appview)
+        ui_string = "<popup name='HildonApp'></popup>"
+        self._setup_internal_children(gwidget)
+
+        project = gwidget.project
+        project.uim.create_default_actions()
+
+        project.uim.add_ui(gwidget, ui_string)
+
+    def fill_empty(self, context, appview):
+        appview.add(context.create_placeholder())
+        appview.vbox.add(context.create_placeholder())
+
+    def replace_child(self, context, current, new, container):
+        if current in container.get_children():
+            container.remove(current)
+            container.add(new)
+        if current in container.vbox.get_children():
+            position = container.vbox.get_children().index(current)
+            container.vbox.remove(current)
+            container.vbox.add(new)
+            container.vbox.reorder_child(new, position)
+
+    def load(self, context, gtk_widget, blacklist):
+        project = context.get_project()
+
+        old_name = gtk_widget.name
+        gwidget = Widget.load(gtk_widget, project, blacklist)
+        gwidget._name = gwidget.gtk_widget.name
+
+        # change the gtk_widget for the one we get from the uimanager
+        project.uim.load_widget(gwidget, old_name)
+
+        # create the children
+        if isinstance(gtk_widget, gtk.Container):
+            for child in gtk_widget.get_children():
+                load_child(gwidget, child, project, blacklist)
+
+        # load the vbox
+        self._setup_internal_children(gwidget)
+
+        # create children for the vbox
+        for child in gtk_widget.vbox.get_children():
+            load_child(gwidget, child, project, blacklist)
+
+        gwidget.load_signals()
+
+        return gwidget
+
+    def _setup_internal_children(self, gwidget):
+        child_class = widget_registry.get_by_name('GtkVBox')
+        vbox_widget = Widget(child_class, gwidget.project)
+        vbox_widget.setup_internal_widget(gwidget.gtk_widget.vbox, 'vbox',
+                                          gwidget.name or '')
+
+class ToolBarsProp(CustomProperty, IntType):
+    minimum = 0
+    maximum = 10
+    step_increment = 1
+    page_increment = 1
+    climb_rate = 1
+    label = "Number of Toolbars"
+    default = 1
+    def get(self):
+        return len(self._object.vbox.get_children())
+
+    def set(self, value):
+        old_size = len(self._object.vbox.get_children())
+        new_size = value
+        if new_size == old_size:
+            return
+
+        if new_size > old_size:
+            while new_size > old_size:
+                placeholder = Placeholder(self._project.get_app())
+                self._object.vbox.add(placeholder)
+                self._object.vbox.reorder_child(placeholder, 0)
+                old_size += 1
+        else:
+            children = self._object.vbox.get_children()
+            while old_size > new_size:
+                self._object.vbox.remove(children[0])
+                self._project.remove_widget(children[0])
+                if old_size > 1:
+                    children = children[1:]
+                old_size -= 1
+
+    def save (self):
+        return None
+
+    def load (self):
+        self._value = len(self._object.vbox.get_children())
+
+prop_registry.override_property('HildonAppView::ToolBars', ToolBarsProp)
+
+
+class AppViewMenuEditor(UIEditor):
+    def _create_widgets(self):
+        super(AppViewMenuEditor, self)._create_widgets()
+
+        self.left = gtk.Button(stock=gtk.STOCK_GO_BACK)
+        self.left.connect('clicked', self._on_left_clicked)
+        self.right = gtk.Button(stock=gtk.STOCK_GO_FORWARD)
+        self.right.connect('clicked', self._on_right_clicked)
+        self.v_button_box.pack_start(self.left)
+        self.v_button_box.pack_start(self.right)
+
+    def set_widget(self, widget, proxy):
+        super(AppViewMenuEditor, self).set_widget(widget, proxy)
+        self.add_managed_type (hildon.AppView)
+
+    def set_ui(self):
+        ui_string = self.root_node.toxml()
+        self.widget.set_property('menu-ui', ui_string)
+        self.gwidget.project.changed = True
+
+    def load_ui(self):
+        ui = self.widget.get_property("menu-ui")
+
+        self.model.clear()
+        if ui:
+            xml_string = ui
+            self.xml_doc = xml.dom.minidom.parseString(xml_string)
+            self.xml_doc.normalize()
+            self.root_node = self.xml_doc.documentElement
+            typename = self.root_node.tagName
+        else:
+            # create empty XML document
+            self.create_empty_xml()
+            typename = "popup"
+
+        for xml_node in xml_filter_nodes(self.root_node.childNodes,
+                                         self.root_node.ELEMENT_NODE):
+            self._load_node(xml_node, None)
+
+        self.set_buttons_sensitiviness(typename)
+
+    def set_buttons_sensitiviness(self, typename):
+        buttons = (self.add, self.remove, self.up, self.down, self.left,
+                   self.right)
+        sensitivity = {
+            'popup': (True, False, False, False, False, False),
+            'menu': (True, True, True, True, False, True),
+            'menuitem': (True, True, True, True, True, False),
+            'separator': (False, True, True, True, False, False),
+            }
+        for i, s in enumerate(sensitivity[typename]):
+            buttons[i].set_sensitive(s)
+
+    def create_add_dialog(self):
+        selected_iter = self._get_selected_iter()
+        dialog = AddMenuitemDialog(self.uim.action_groups, self)
+        dialog.typename = 'menuitem'
+        if selected_iter is None:
+            # we are adding a toplevel
+            dialog.parent_node = self.root_node
+        else:
+            # we are adding a child menuitem for a menu
+            dialog.parent_node = self.model.get_value(selected_iter, 0)
+        return dialog
+
+    def create_empty_xml(self):
+        self.xml_doc = xml.dom.getDOMImplementation().createDocument(None,
+                                                                     None,
+                                                                     None)
+
+        element = self.xml_doc.createElement('popup')
+        element.setAttribute('name', 'HildonApp')
+
+        self.root_node = element
+
+        self.widget.set_property("menu-ui", self.root_node.toxml())
+
+    def create_xml_node(self, parent, typename, name=None):
+        element = self.xml_doc.createElement(typename)
+        print "<" + parent.tagName + ">"
+        if parent.tagName == 'menuitem':
+            print "Changing parent"
+            node = self.xml_doc.createElement('menu')
+            node.setAttribute('name', parent.getAttribute('name'))
+            node.setAttribute('action', parent.getAttribute('action'))
+            grandparent = parent.parentNode
+            if grandparent is not None:
+                grandparent.removeChild(parent)
+                grandparent.appendChild(node)
+                parent = node
+        else:
+            print "not changing"
+
+        if typename != 'separator':
+            element.setAttribute('name', name)
+            element.setAttribute('action', name)
+
+        print "Appending", element.tagName, "to", parent.tagName
+        return parent.appendChild(element)
+
+
+gobject.type_register(AppViewMenuEditor)
+
+class AppViewMenuPropEditor(PropertyCustomEditorWithDialog):
+    button_text = _('Edit UI Definition...')
+    dialog_class = AppViewMenuEditor
+
+class AppViewMenuAdaptor(CustomProperty, StringType):
+    editor = AppViewMenuPropEditor
+    translatable = False
+    context = False
+    cdata = True
+
+prop_registry.override_property('HildonAppView::menu-ui', AppViewMenuAdaptor)
+
+prop_registry.override_simple('HildonAppView::fullscreen', disabled=True)
+
+class  FileSelectEditor(PropertyCustomEditor, PropertyEditorDialog, EditorPropertyText):
+    button_text = _('Select...')
+    _widget = None
+    image = None
+    button = None
+    hbox = None
+    image_name = '/usr/share/gazpacho/resources/hildonwidgets/caption.png'
+    dialog = None
+    gwidget = None
+    proxy = None
+    application_window = None
+
+    def set_widget(self, widget, proxy):
+        self._widget = widget
+        self.proxy = proxy
+
+    def get_editor_widget(self):
+        if self.button is None:
+           self.button = gtk.Button(self.button_text)
+           self.button.connect('clicked', self._clicked)
+        if self.image is None:
+           self.image = gtk.Image()
+           self.image.set_from_file(self.image_name)
+           self.image.set_pixel_size (24)
+        if self.hbox is None:
+           self.hbox = gtk.HBox(False, 6)
+           self.hbox.add(self.image)
+           self.hbox.add(self.button)
+
+        return self.hbox
+
+    def _clicked (self, button):
+         dialog = gtk.FileChooserDialog(_('Open image ...'),
+                                        self.application_window,
+                                        gtk.FILE_CHOOSER_ACTION_OPEN,
+                                        (gtk.STOCK_CANCEL,
+                                         gtk.RESPONSE_CANCEL,
+                                         gtk.STOCK_OPEN,
+                                         gtk.RESPONSE_OK))
+         file_filter = gtk.FileFilter()
+         file_filter.set_name("Images")
+         file_filter.add_mime_type("image/png")
+         file_filter.add_mime_type("image/jpeg")
+         file_filter.add_mime_type("image/gif")
+         file_filter.add_mime_type("image/x-xpixmap")
+         file_filter.add_pattern("*.png")
+         file_filter.add_pattern("*.jpg")
+         file_filter.add_pattern("*.gif")
+         file_filter.add_pattern("*.xpm")
+
+         dialog.add_filter(file_filter)
+
+         dialog.connect('response', self.handle_response)
+         response = dialog.run()
+
+    def handle_response (self, dialog, response):
+        dialog.hide()
+        filename = dialog.get_filename()
+        if response == gtk.RESPONSE_OK and filename:
+            self.image_name = filename
+            self.image.set_from_file(filename)
+            image = self._widget.get_icon_image()
+            if image is None:
+                image = gtk.Image()
+                self._widget.set_icon_image(image)
+
+            image.set_from_file(self.image_name)
+            self._widget.set_data("imagefilename", self.image_name)
+
+            gwidget = Widget.from_widget(self._widget)
+            gwidget.project.changed = True
+
+        dialog.destroy()
+
+    def update(self, context, gtk_widget, proxy):
+        self._widget = gtk_widget
+        self.image.set_from_file(gtk_widget.get_data("imagefilename"))
+
+
+gobject.type_register(FileSelectEditor)
+
+
+class CaptionImageEditor(FileSelectEditor):
+    button_text = _('Select image...')
+    dialog_class = FileSelectEditor
+
+class CaptionImageAdaptor(TransparentProperty, StringType):
+    editor = CaptionImageEditor
+
+    def set(self, value):
+        pass
+
+    def get(self):
+        pass
+
+    def save(self):
+        image = self._object.get_icon_image()
+        if image is None:
+          return None
+
+        name = self._object.get_data("imagefilename")
+        return name
+
+prop_registry.override_property('HildonCaption::icon-setter', CaptionImageAdaptor)
+
+class CaptionAdaptor(WidgetAdaptor):
+    internal_child = None
+
+    def post_create (self, context, caption, interactive=True):
+        caption.set_label("Caption")
+        caption.set_separator(":")
+
+
+    def save(self, context, gwidget):
+        project = context.get_project()
+
+        self._setup_internal_children(gwidget)
+
+        return gwidget
+
+    def load(self, context, gtk_widget, blacklist):
+        project = context.get_project()
+
+        old_name = gtk_widget.name
+        gwidget = Widget.load(gtk_widget, project, blacklist)
+        gwidget._name = gwidget.gtk_widget.name
+
+        # create the children
+        if isinstance(gtk_widget, gtk.Container):
+            for child in gtk_widget.get_children():
+                load_child(gwidget, child, project, blacklist)
+
+        self._setup_internal_children(gwidget)
+        if self.internal_child is not None:
+            try:
+                prop = gwidget.get_prop('image-setter')
+                self.internal_child.set_property('file', prop.value)
+            except PropertyError:
+                print "TODO: Find out why custom properties are not loaded"
+                pass
+
+        gwidget.load_signals()
+
+        return gwidget
+
+    def fill_empty(self, context, caption):
+        pass
+
+    def replace_child(self, context, current, new, container):
+        container.remove(current)
+        container.add(new)
+
+    def _find_internal_child(self, child):
+        if self.internal_child is None and isinstance (child, gtk.HBox):
+            for child in child.get_children():
+                if isinstance(child, gtk.Image):
+                    self.internal_child = child
+                    break
+
+    def _setup_internal_children(self, gwidget):
+        if self.internal_child is not None:
+            return
+        child_class = widget_registry.get_by_name('GtkImage')
+        gwidget.gtk_widget.forall(self._find_internal_child)
+        if self.internal_child is not None:
+            image_widget = Widget(child_class, gwidget.project)
+            image_widget.setup_internal_widget(self.internal_child, 'image',
+                                              gwidget.name or '')
+
+# Allow history items to be previewed
+class Items(CustomProperty, StringType):
+    label = 'Items'
+    default = ''
+    def __init__(self, widget):
+        # XXX: Adapter should be accessible in all properties
+        self._adapter = adapter_registry.get_adapter(widget.gtk_widget, None)
+        super(Items, self).__init__(widget)
+
+    def load(self):
+        model = self._object.get_property('list')
+        if not model:
+            model = gtk.ListStore(str)
+            self._object.set_property('list', model)
+        self._value = '\n'.join([row[0] for row in model])
+        self._initial = self.default
+
+    def set_items(self, gtk_widget, value):
+        model = gtk_widget.get_property('list')
+        if not model:
+            model = gtk.ListStore(str)
+            gtk_widget.set_property('list', model)
+        model.clear()
+        for val in value.split('\n'):
+        		iter = model.append()
+        		model.set(iter, 0, val)
+
+        self._value = '\n'.join([row[0] for row in model])
+
+#    def save(self):
+#        pass
+
+    def get(self):
+        return self._value
+
+    def set(self, value):
+        self._value = value
+        self.set_items(self._object, value)
+
+prop_registry.override_property('HildonFindToolbar::items', Items)
+
diff -Nur gazpacho-hildon/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/libs.py gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/libs.py
--- gazpacho-hildon/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/libs.py	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/lib/python2.4/site-packages/gazpacho/widgets/hildonwidgets/libs.py	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1,139 @@
+# Copyright (C) 2005 <insert name here>
+#
+# Adaptors for Hildon-libs widgets
+#
+
+import gettext
+
+import gtk
+
+import hildon
+
+from gazpacho.widget import Widget
+from gazpacho.widgetadaptor import WidgetAdaptor
+from gazpacho.properties import prop_registry, TransparentProperty, StringType, CustomProperty
+from gazpacho.loader.custom import adapter_registry
+
+_ = gettext.gettext
+
+
+# Dialogs
+
+class ModalDialogAdaptor(WidgetAdaptor):
+    def post_create(self, context, dialog, interactive=True):
+        self._make_usable(dialog)
+
+    def _make_usable(self, dialog):
+        dialog.set_modal(False)
+        dialog.set_type_hint(gtk.gdk.WINDOW_TYPE_HINT_NORMAL)
+        dialog.set_property("decorated", True)
+        dialog.realize()
+        dialog.window.set_functions(gtk.gdk.FUNC_CLOSE)
+        dialog.window.set_decorations(gtk.gdk.DECOR_ALL)
+
+class NoteAdaptor(ModalDialogAdaptor):
+    def post_create (self, context, note, interactive=True):
+        note.set_property("description", "Something noteworthy")
+        self._make_usable(note)
+
+    def fill_empty(self, context, note):
+        note.vbox.add(context.create_placeholder())
+
+    def replace_child(self, context, current, new, note):
+        note.vbox.remove(current)
+        note.vbox.add(new)
+
+class WizardAdaptor(WidgetAdaptor):
+    def fill_empty(self, context, wizard):
+        notebook = gtk.Notebook()
+        notebook.append_page(context.create_placeholder())
+        wizard.set_property("wizard-notebook", notebook)
+
+    def replace_child(self, context, current, new, wizard):
+        notebook = wizard.get_property("wizard-notebook")
+        if notebook:
+          notebook.remove(current)
+          notebook.add(new)
+
+# Widgets
+
+class GridAdaptor(WidgetAdaptor):
+    def post_create (self, context, grid, interactive=True):
+        print "post_create"
+        #grid.set_size_request(100,100)
+
+    def fill_empty(self, context, grid):
+        print "fill_empty"
+        grid.add(hildon.hildon_grid_item_new_with_label('debian-logo', 'New item'))
+        grid.show_all()
+
+    def replace_child(self, context, current, new, grid):
+        print "replace_child"
+        grid.remove(current)
+        grid.add(new)
+
+class ColorButtonAdaptor(WidgetAdaptor):
+    def post_create (self, context, button, interactive=True):
+        print button
+
+#    def load(self, context, gtk_widget, blacklist):
+#        project = context.get_project()
+#        gwidget = Widget.load(gtk_widget, project, blacklist)
+#        return gwidget
+
+    def fill_empty(self, context, grid):
+        pass
+
+    def replace_child(self, context, grid):
+        pass
+
+class ButtonContentsAdaptor(TransparentProperty, StringType):
+    pass
+
+prop_registry.override_property('HildonColorButton::contents', ButtonContentsAdaptor)
+
+class Items(CustomProperty, StringType):
+    label = 'Items'
+    default = ''
+    def __init__(self, widget):
+        # XXX: Adapter should be accessible in all properties
+        self._adapter = adapter_registry.get_adapter(widget.gtk_widget, None)
+        super(Items, self).__init__(widget)
+
+    def load(self):
+        self._value = ''
+        self._initial = self.default
+
+    def set_items(self, gtk_widget):
+        for val in self._value.split('\n'):
+        		gtk_widget.add_sort_key(val)
+
+#    def save(self):
+#        pass
+
+    def get(self):
+        return self._value
+
+    def set(self, value):
+        self._value = value
+        self.set_items(self._object)
+
+prop_registry.override_property('HildonSortDialog::items', Items)
+
+class SortKeys(CustomProperty, StringType):
+    label = 'Sort Keys'
+    default = ''
+    custom = True
+
+    def __init__(self, widget):
+        # XXX: Adapter should be accessible in all properties
+        self._adapter = adapter_registry.get_adapter(widget.gtk_widget, None)
+        super(SortKeys, self).__init__(widget)
+
+    def get(self):
+        return self._adapter.prop_get_sort_keys(self._object)
+
+    def set(self, value):
+      if value != '':
+        self._adapter.prop_set_sort_keys(self._object, value)
+prop_registry.override_property('HildonSortDialog::sort-keys', SortKeys)
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/doc/gazpacho-hildon/changelog.Debian.gz and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/doc/gazpacho-hildon/changelog.Debian.gz differ
diff -Nur gazpacho-hildon/debian/gazpacho-hildon/usr/share/doc/gazpacho-hildon/copyright gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/doc/gazpacho-hildon/copyright
--- gazpacho-hildon/debian/gazpacho-hildon/usr/share/doc/gazpacho-hildon/copyright	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/doc/gazpacho-hildon/copyright	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1 @@
+
diff -Nur gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/catalogs/hildonwidgets.xml gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/catalogs/hildonwidgets.xml
--- gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/catalogs/hildonwidgets.xml	1970-01-01 02:00:00.000000000 +0200
+++ gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/catalogs/hildonwidgets.xml	2006-04-14 11:14:40.000000000 +0300
@@ -0,0 +1,170 @@
+<?xml version="1.0"?>
+<!DOCTYPE glade-catalog SYSTEM "glade-catalog.dtd">
+<glade-catalog name="hildonwidgets">
+  <glade-widget-classes>
+  
+    <glade-widget-class name="HildonApp"
+                        generic-name="app"
+                        title="Application"
+                        adaptor-class="lgpl.AppAdaptor"/>
+    <glade-widget-class name="HildonAppView"
+                        generic-name="appview"
+                        title="Application View"
+                        adaptor-class="lgpl.AppViewAdaptor"/>
+
+    <glade-widget-class name="HildonCaption"
+                        generic-name="caption"
+                        title="Caption"
+                        adaptor-class="lgpl.CaptionAdaptor"/>
+
+    <glade-widget-class name="HildonGrid"
+                        generic-name="grid"
+                        title="Grid"
+                        adaptor-class="libs.GridAdaptor"/>
+                        
+    <glade-widget-class name="HildonColorButton"
+                        generic-name="colorbutton"
+                        title="Color Button"
+                        adaptor-class="libs.ColorButtonAdaptor"/>
+
+    <glade-widget-class name="HildonColorSelector"
+                        generic-name="colorselector"
+                        title="Color Selector"/>
+
+    <glade-widget-class name="HildonDateEditor"
+                        generic-name="dateeditor"
+                        title="Date Editor"/>
+    <glade-widget-class name="HildonTimeEditor"
+                        generic-name="timeeditor"
+                        title="Time Editor"/>
+    <glade-widget-class name="HildonRangeEditor"
+                        generic-name="rangeeditor"
+                        title="Range Editor"/>
+    <glade-widget-class name="HildonNumberEditor"
+                        generic-name="numbereditor"
+                        title="Number Editor"/>
+    <glade-widget-class name="HildonTelephoneEditor"
+                        generic-name="telephoneeditor"
+                        title="Telephone Editor"/>
+    <glade-widget-class name="HildonTimePicker"
+                        generic-name="timepicker"
+                        title="Time Picker"/>
+    <glade-widget-class name="HildonWeekdayPicker"
+                        generic-name="weekdaypicker"
+                        title="Weekday Picker"/>
+                        
+    <glade-widget-class name="HildonHVolumebar" 
+                        generic-name="hvolumebar"
+                        title="Horizontal Volumebar"/>
+    <glade-widget-class name="HildonVVolumebar"
+                        generic-name="vvolumebar"
+                        title="Vertical Volumebar"/>
+    <glade-widget-class name="HildonControlbar"
+                        generic-name="controlbar"
+                        title="Controlbar"/>
+    <glade-widget-class name="HildonSeekbar"
+                        generic-name="seekbar"
+                        title="Seekbar"/>
+    <glade-widget-class name="HildonFindToolbar"
+                        generic-name="findtoolbar"
+                        title="Find toolbar"/>
+    <glade-widget-class name="HildonGridItem"
+                        generic-name="griditem"/>
+                        
+    <glade-widget-class name="HildonNote"
+                        generic-name="note"
+                        title="Note"
+                        adaptor-class="libs.NoteAdaptor"/>
+<!-- DEPRECATED
+    <glade-widget-class name="HildonFileHandlingNote"
+                        generic-name="filehandlingnote"
+                        title="File Handling Note"
+                        adaptor-class="ModalDialogAdaptor"/>
+-->
+    <glade-widget-class name="HildonWizardDialog"
+                        generic-name="wizarddialog"
+                        title="Wizard Dialog"
+                        adaptor-class="libs.WizardAdaptor"/>
+    <glade-widget-class name="HildonFileChooserDialog"
+                        generic-name="filechooserdialog"
+                        title="File Chooser Dialog"/>
+    <glade-widget-class name="HildonFileDetailsDialog"
+                        generic-name="filedetailsdialog"
+                        title="File Details Dialog"/>
+    <glade-widget-class name="HildonFontSelectionDialog"
+                        generic-name="fontselectiondialog"
+                        title="Font Selection Dialog"/>
+    <glade-widget-class name="HildonGetPasswordDialog"
+                        generic-name="getpassworddialog"
+                        title="Get Password Dialog"
+                        adaptor-class="libs.ModalDialogAdaptor"/>
+    <glade-widget-class name="HildonInsertObjectDialog"
+                        generic-name="insertobjectdialog"
+                        title="Insert Object Dialog"/>
+    <glade-widget-class name="HildonNamePasswordDialog"
+                        generic-name="namepassworddialog"
+                        title="Name Password Dialog"/>
+    <glade-widget-class name="HildonSetPasswordDialog"
+                        generic-name="setpassworddialog"
+                        title="SetPasswordDialog"
+                        adaptor-class="libs.ModalDialogAdaptor"/>
+
+    <glade-widget-class name="HildonSortDialog"
+                        generic-name="sortdialog"
+                        title="Sort Dialog"
+                        adaptor-class="libs.ModalDialogAdaptor"/>
+
+    <glade-widget-class name="HildonCalendarPopup"
+                        generic-name="calendarpopup"
+                        title="Calendar Popup"/>
+                        
+  </glade-widget-classes>
+
+  <glade-widget-group name="hildon" title="Hildon Widgets">
+    <glade-widget-class-ref name="HildonColorButton"/>
+    
+    <glade-widget-class-ref name="HildonDateEditor"/>
+    <glade-widget-class-ref name="HildonWeekdayPicker"/>
+    <glade-widget-class-ref name="HildonTimeEditor"/>
+    <glade-widget-class-ref name="HildonNumberEditor"/>
+    <glade-widget-class-ref name="HildonRangeEditor"/>
+    <glade-widget-class-ref name="HildonTelephoneEditor"/>
+    
+    <glade-widget-class-ref name="HildonHVolumebar"/>
+    <glade-widget-class-ref name="HildonVVolumebar"/>
+    <glade-widget-class-ref name="HildonControlbar"/>
+    <glade-widget-class-ref name="HildonSeekbar"/>
+    
+    <glade-widget-class-ref name="HildonFindToolbar"/>
+  </glade-widget-group>
+
+  <glade-widget-group name="hildon-containers" title="Hildon Popups">
+    <glade-widget-class-ref name="HildonCalendarPopup"/>
+    <glade-widget-class-ref name="HildonColorSelector"/>
+    <glade-widget-class-ref name="HildonTimePicker"/>
+  </glade-widget-group>
+  
+  <glade-widget-group name="hildon-containers" title="Hildon Containers">
+    <glade-widget-class-ref name="HildonAppView"/>
+    <glade-widget-class-ref name="HildonCaption"/> 
+    <glade-widget-class-ref name="HildonGrid"/>
+  </glade-widget-group>
+
+  <glade-widget-group name="hildon-toplevels" title="Hildon Toplevels">
+    <glade-widget-class-ref name="HildonApp"/>
+    <glade-widget-class-ref name="HildonNote"/>
+<!-- DEPRECATED
+    <glade-widget-class-ref name="HildonFileHandlingNote"/>
+-->
+    <glade-widget-class-ref name="HildonFileChooserDialog"/>
+    <glade-widget-class-ref name="HildonFileDetailsDialog"/>
+    <glade-widget-class-ref name="HildonFontSelectionDialog"/>
+    <glade-widget-class-ref name="HildonGetPasswordDialog"/>
+    <glade-widget-class-ref name="HildonInsertObjectDialog"/>
+    <glade-widget-class-ref name="HildonNamePasswordDialog"/>
+    <glade-widget-class-ref name="HildonSetPasswordDialog"/>
+    <glade-widget-class-ref name="HildonSortDialog"/>
+    <glade-widget-class-ref name="HildonWizardDialog"/>
+  </glade-widget-group>
+</glade-catalog>
+
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/app.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/app.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/appview.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/appview.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/calendarpopup.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/calendarpopup.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/caption.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/caption.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/colorbutton.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/colorbutton.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/colorselector.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/colorselector.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/controlbar.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/controlbar.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/dateeditor.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/dateeditor.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/filechooserdialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/filechooserdialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/filedetailsdialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/filedetailsdialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/filehandlingnote.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/filehandlingnote.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/findtoolbar.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/findtoolbar.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/fontselectiondialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/fontselectiondialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/getpassworddialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/getpassworddialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/grid.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/grid.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/hvolumebar.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/hvolumebar.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/insertobjectdialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/insertobjectdialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/namepassworddialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/namepassworddialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/note.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/note.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/numbereditor.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/numbereditor.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/rangeeditor.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/rangeeditor.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/seekbar.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/seekbar.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/setpassworddialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/setpassworddialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/sortdialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/sortdialog.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/telephoneeditor.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/telephoneeditor.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/timeeditor.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/timeeditor.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/timepicker.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/timepicker.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/vvolumebar.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/vvolumebar.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/weekdaypicker.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/weekdaypicker.png differ
Binary files gazpacho-hildon/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/wizarddialog.png and gazpacho-hildon-sicem/debian/gazpacho-hildon/usr/share/gazpacho/resources/hildonwidgets/wizarddialog.png differ
diff -Nur gazpacho-hildon/hildonwidgets/__init__.py gazpacho-hildon-sicem/hildonwidgets/__init__.py
--- gazpacho-hildon/hildonwidgets/__init__.py	2006-01-30 16:23:18.000000000 +0200
+++ gazpacho-hildon-sicem/hildonwidgets/__init__.py	2006-05-04 10:54:10.000000000 +0300
@@ -1,6 +1,21 @@
-# Copyright (C) 2005, 2006 Nokia Corporation
-
-import gazpacho.widgets.hildonwidgets
+# Gazpacho Hildon widget bindings
+#
+# Copyright (C) 2005, 2006 Nokia Corporation.
+# Contact: Erik Karlsson <erik.b.karlsson@nokia.com>
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation
+# version 2.1 of the License.
+#
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 
 # The root library is the name of the library Gazpacho will import to create
 # the widgets. e.g import gtk
diff -Nur gazpacho-hildon/hildonwidgets/lgpl.py gazpacho-hildon-sicem/hildonwidgets/lgpl.py
--- gazpacho-hildon/hildonwidgets/lgpl.py	2006-01-30 16:23:18.000000000 +0200
+++ gazpacho-hildon-sicem/hildonwidgets/lgpl.py	2006-05-04 10:54:47.000000000 +0300
@@ -1,7 +1,22 @@
-# Copyright (C) 2005,2006 Nokia Corporation
+# Gazpacho Hildon widget bindings
 #
-# Adaptors for Hildon-lgpl widgets
+# Copyright (C) 2005, 2006 Nokia Corporation.
+# Contact: Erik Karlsson <erik.b.karlsson@nokia.com>
 #
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation
+# version 2.1 of the License.
+#
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+
 
 import gettext
 
@@ -31,7 +46,7 @@
     def post_create (self, context, app, interactive=True):
         # Resize the window to target size
         app.set_size_request(672,396)
-    
+
     def fill_empty(self, context, widget):
         widget.add(context.create_placeholder())
 
@@ -45,7 +60,6 @@
         gwidget = Widget.from_widget(appview)
         ui_string = "<popup name='HildonApp'></popup>"
         self._setup_internal_children(gwidget)
-        gwidget.internal_children.append(gwidget.gtk_widget.vbox)
 
         project = gwidget.project
         project.uim.create_default_actions()
@@ -55,7 +69,7 @@
     def fill_empty(self, context, appview):
         appview.add(context.create_placeholder())
         appview.vbox.add(context.create_placeholder())
-    
+
     def replace_child(self, context, current, new, container):
         if current in container.get_children():
             container.remove(current)
@@ -80,15 +94,14 @@
         if isinstance(gtk_widget, gtk.Container):
             for child in gtk_widget.get_children():
                 load_child(gwidget, child, project, blacklist)
-        
+
         # load the vbox
         self._setup_internal_children(gwidget)
-        gwidget.internal_children.append(gtk_widget.vbox)
 
         # create children for the vbox
         for child in gtk_widget.vbox.get_children():
             load_child(gwidget, child, project, blacklist)
- 
+
         gwidget.load_signals()
 
         return gwidget
@@ -162,7 +175,7 @@
 
     def load_ui(self):
         ui = self.widget.get_property("menu-ui")
-        
+
         self.model.clear()
         if ui:
             xml_string = ui
@@ -174,11 +187,11 @@
             # create empty XML document
             self.create_empty_xml()
             typename = "popup"
-        
+
         for xml_node in xml_filter_nodes(self.root_node.childNodes,
                                          self.root_node.ELEMENT_NODE):
             self._load_node(xml_node, None)
-            
+
         self.set_buttons_sensitiviness(typename)
 
     def set_buttons_sensitiviness(self, typename):
@@ -212,9 +225,9 @@
 
         element = self.xml_doc.createElement('popup')
         element.setAttribute('name', 'HildonApp')
-        
+
         self.root_node = element
-        
+
         self.widget.set_property("menu-ui", self.root_node.toxml())
 
     def create_xml_node(self, parent, typename, name=None):
@@ -232,13 +245,12 @@
                 parent = node
         else:
             print "not changing"
-            
+
         if typename != 'separator':
             element.setAttribute('name', name)
             element.setAttribute('action', name)
-        
+
         print "Appending", element.tagName, "to", parent.tagName
-        
         return parent.appendChild(element)
 
 
@@ -269,7 +281,7 @@
     gwidget = None
     proxy = None
     application_window = None
-    
+
     def set_widget(self, widget, proxy):
         self._widget = widget
         self.proxy = proxy
@@ -286,9 +298,9 @@
            self.hbox = gtk.HBox(False, 6)
            self.hbox.add(self.image)
            self.hbox.add(self.button)
-        
+
         return self.hbox
-    
+
     def _clicked (self, button):
          dialog = gtk.FileChooserDialog(_('Open image ...'),
                                         self.application_window,
@@ -309,10 +321,10 @@
          file_filter.add_pattern("*.xpm")
 
          dialog.add_filter(file_filter)
-    
+
          dialog.connect('response', self.handle_response)
          response = dialog.run()
-    
+
     def handle_response (self, dialog, response):
         dialog.hide()
         filename = dialog.get_filename()
@@ -323,24 +335,23 @@
             if image is None:
                 image = gtk.Image()
                 self._widget.set_icon_image(image)
-              
+
             image.set_from_file(self.image_name)
             self._widget.set_data("imagefilename", self.image_name)
-            
+
             gwidget = Widget.from_widget(self._widget)
             gwidget.project.changed = True
 
         dialog.destroy()
-    
+
     def update(self, context, gtk_widget, proxy):
         self._widget = gtk_widget
         self.image.set_from_file(gtk_widget.get_data("imagefilename"))
-        
+
 
 gobject.type_register(FileSelectEditor)
 
 
-    
 class CaptionImageEditor(FileSelectEditor):
     button_text = _('Select image...')
     dialog_class = FileSelectEditor
@@ -353,35 +364,32 @@
 
     def get(self):
         pass
-    
+
     def save(self):
         image = self._object.get_icon_image()
         if image is None:
           return None
-        
+
         name = self._object.get_data("imagefilename")
         return name
-    
+
 prop_registry.override_property('HildonCaption::icon-setter', CaptionImageAdaptor)
 
 class CaptionAdaptor(WidgetAdaptor):
     internal_child = None
-    
+
     def post_create (self, context, caption, interactive=True):
         caption.set_label("Caption")
         caption.set_separator(":")
-        
+
 
     def save(self, context, gwidget):
         project = context.get_project()
 
         self._setup_internal_children(gwidget)
 
-        if self.internal_child is not None:
-            gwidget.internal_children.append(self.internal_child)
-            
         return gwidget
-        
+
     def load(self, context, gtk_widget, blacklist):
         project = context.get_project()
 
@@ -402,16 +410,13 @@
             except PropertyError:
                 print "TODO: Find out why custom properties are not loaded"
                 pass
-            
-            gwidget.internal_children.append(self.internal_child)
-        
 
         gwidget.load_signals()
 
         return gwidget
 
     def fill_empty(self, context, caption):
-        caption.set_control(context.create_placeholder())
+        pass
 
     def replace_child(self, context, current, new, container):
         container.remove(current)
@@ -460,18 +465,18 @@
         for val in value.split('\n'):
         		iter = model.append()
         		model.set(iter, 0, val)
-        
+
         self._value = '\n'.join([row[0] for row in model])
-    
+
 #    def save(self):
 #        pass
-    
+
     def get(self):
         return self._value
-    
+
     def set(self, value):
         self._value = value
         self.set_items(self._object, value)
-        
+
 prop_registry.override_property('HildonFindToolbar::items', Items)
 
diff -Nur gazpacho-hildon/hildonwidgets/libs.py gazpacho-hildon-sicem/hildonwidgets/libs.py
--- gazpacho-hildon/hildonwidgets/libs.py	2005-10-24 17:07:56.000000000 +0300
+++ gazpacho-hildon-sicem/hildonwidgets/libs.py	2006-05-04 10:55:05.000000000 +0300
@@ -1,7 +1,23 @@
-# Copyright (C) 2005 <insert name here>
+# Gazpacho Hildon widget bindings
 #
-# Adaptors for Hildon-libs widgets
+# Copyright (C) 2005, 2006 Nokia Corporation.
+# Contact: Erik Karlsson <erik.b.karlsson@nokia.com>
 #
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation
+# version 2.1 of the License.
+#
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+
+
 
 import gettext
 
@@ -61,7 +77,7 @@
     def post_create (self, context, grid, interactive=True):
         print "post_create"
         #grid.set_size_request(100,100)
-    
+
     def fill_empty(self, context, grid):
         print "fill_empty"
         grid.add(hildon.hildon_grid_item_new_with_label('debian-logo', 'New item'))
@@ -107,17 +123,17 @@
     def set_items(self, gtk_widget):
         for val in self._value.split('\n'):
         		gtk_widget.add_sort_key(val)
-    
+
 #    def save(self):
 #        pass
-    
+
     def get(self):
         return self._value
-    
+
     def set(self, value):
         self._value = value
         self.set_items(self._object)
-        
+
 prop_registry.override_property('HildonSortDialog::items', Items)
 
 class SortKeys(CustomProperty, StringType):
@@ -132,7 +148,7 @@
 
     def get(self):
         return self._adapter.prop_get_sort_keys(self._object)
-    
+
     def set(self, value):
       if value != '':
         self._adapter.prop_set_sort_keys(self._object, value)
