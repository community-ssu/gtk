
/* Generated data (by glib-mkenums) */


/* enumerations from "/usr/include/hildon-fm/hildon-widgets/hildon-file-system-model.h" */
GType
hildon_file_system_model_columns_get_type (void)
{
  static GType etype = 0;
  if (etype == 0) {
    static const GEnumValue values[] = {
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_GTK_PATH, "HILDON_FILE_SYSTEM_MODEL_COLUMN_GTK_PATH", "column-gtk-path" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_LOCAL_PATH, "HILDON_FILE_SYSTEM_MODEL_COLUMN_LOCAL_PATH", "column-local-path" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_URI, "HILDON_FILE_SYSTEM_MODEL_COLUMN_URI", "column-uri" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_FILE_NAME, "HILDON_FILE_SYSTEM_MODEL_COLUMN_FILE_NAME", "column-file-name" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_DISPLAY_NAME, "HILDON_FILE_SYSTEM_MODEL_COLUMN_DISPLAY_NAME", "column-display-name" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_SORT_KEY, "HILDON_FILE_SYSTEM_MODEL_COLUMN_SORT_KEY", "column-sort-key" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_MIME_TYPE, "HILDON_FILE_SYSTEM_MODEL_COLUMN_MIME_TYPE", "column-mime-type" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_FILE_SIZE, "HILDON_FILE_SYSTEM_MODEL_COLUMN_FILE_SIZE", "column-file-size" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_FILE_TIME, "HILDON_FILE_SYSTEM_MODEL_COLUMN_FILE_TIME", "column-file-time" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_IS_FOLDER, "HILDON_FILE_SYSTEM_MODEL_COLUMN_IS_FOLDER", "column-is-folder" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_IS_AVAILABLE, "HILDON_FILE_SYSTEM_MODEL_COLUMN_IS_AVAILABLE", "column-is-available" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_HAS_LOCAL_PATH, "HILDON_FILE_SYSTEM_MODEL_COLUMN_HAS_LOCAL_PATH", "column-has-local-path" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_TYPE, "HILDON_FILE_SYSTEM_MODEL_COLUMN_TYPE", "column-type" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_ICON, "HILDON_FILE_SYSTEM_MODEL_COLUMN_ICON", "column-icon" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_ICON_EXPANDED, "HILDON_FILE_SYSTEM_MODEL_COLUMN_ICON_EXPANDED", "column-icon-expanded" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_ICON_COLLAPSED, "HILDON_FILE_SYSTEM_MODEL_COLUMN_ICON_COLLAPSED", "column-icon-collapsed" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_THUMBNAIL, "HILDON_FILE_SYSTEM_MODEL_COLUMN_THUMBNAIL", "column-thumbnail" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_LOAD_READY, "HILDON_FILE_SYSTEM_MODEL_COLUMN_LOAD_READY", "column-load-ready" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_FREE_SPACE, "HILDON_FILE_SYSTEM_MODEL_COLUMN_FREE_SPACE", "column-free-space" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_TITLE, "HILDON_FILE_SYSTEM_MODEL_COLUMN_TITLE", "column-title" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_AUTHOR, "HILDON_FILE_SYSTEM_MODEL_COLUMN_AUTHOR", "column-author" },
      { HILDON_FILE_SYSTEM_MODEL_COLUMN_IS_HIDDEN, "HILDON_FILE_SYSTEM_MODEL_COLUMN_IS_HIDDEN", "column-is-hidden" },
      { HILDON_FILE_SYSTEM_MODEL_NUM_COLUMNS, "HILDON_FILE_SYSTEM_MODEL_NUM_COLUMNS", "num-columns" },
      { 0, NULL, NULL }
    };
    etype = g_enum_register_static ("HildonFileSystemModelColumns", values);
  }
  return etype;
}

/* enumerations from "/usr/include/hildon-widgets/hildon-grid-item.h" */
GType
hildon_grid_position_type_get_type (void)
{
  static GType etype = 0;
  if (etype == 0) {
    static const GEnumValue values[] = {
      { HILDON_GRID_ITEM_LABEL_POS_BOTTOM, "HILDON_GRID_ITEM_LABEL_POS_BOTTOM", "bottom" },
      { HILDON_GRID_ITEM_LABEL_POS_RIGHT, "HILDON_GRID_ITEM_LABEL_POS_RIGHT", "right" },
      { 0, NULL, NULL }
    };
    etype = g_enum_register_static ("HildonGridPositionType", values);
  }
  return etype;
}
GType
hildon_grid_item_icon_size_type_get_type (void)
{
  static GType etype = 0;
  if (etype == 0) {
    static const GEnumValue values[] = {
      { HILDON_GRID_ITEM_ICON_27x27, "HILDON_GRID_ITEM_ICON_27x27", "27x27" },
      { HILDON_GRID_ITEM_ICON_128x128, "HILDON_GRID_ITEM_ICON_128x128", "128x128" },
      { 0, NULL, NULL }
    };
    etype = g_enum_register_static ("HildonGridItemIconSizeType", values);
  }
  return etype;
}

/* enumerations from "/usr/include/hildon-widgets/hildon-telephone-editor.h" */
GType
hildon_telephone_editor_format_get_type (void)
{
  static GType etype = 0;
  if (etype == 0) {
    static const GEnumValue values[] = {
      { HILDON_TELEPHONE_EDITOR_FORMAT_FREE, "HILDON_TELEPHONE_EDITOR_FORMAT_FREE", "free" },
      { HILDON_TELEPHONE_EDITOR_FORMAT_COERCE, "HILDON_TELEPHONE_EDITOR_FORMAT_COERCE", "coerce" },
      { HILDON_TELEPHONE_EDITOR_FORMAT_COERCE_COUNTRY, "HILDON_TELEPHONE_EDITOR_FORMAT_COERCE_COUNTRY", "coerce-country" },
      { HILDON_TELEPHONE_EDITOR_FORMAT_COERCE_AREA, "HILDON_TELEPHONE_EDITOR_FORMAT_COERCE_AREA", "coerce-area" },
      { 0, NULL, NULL }
    };
    etype = g_enum_register_static ("HildonTelephoneEditorFormat", values);
  }
  return etype;
}

/* enumerations from "/usr/include/glib-2.0/glib/gdate.h" */
GType
g_date_dmy_get_type (void)
{
  static GType etype = 0;
  if (etype == 0) {
    static const GEnumValue values[] = {
      { G_DATE_DAY, "G_DATE_DAY", "day" },
      { G_DATE_MONTH, "G_DATE_MONTH", "month" },
      { G_DATE_YEAR, "G_DATE_YEAR", "year" },
      { 0, NULL, NULL }
    };
    etype = g_enum_register_static ("GDateDMY", values);
  }
  return etype;
}
GType
g_date_weekday_get_type (void)
{
  static GType etype = 0;
  if (etype == 0) {
    static const GEnumValue values[] = {
      { G_DATE_BAD_WEEKDAY, "G_DATE_BAD_WEEKDAY", "bad-weekday" },
      { G_DATE_MONDAY, "G_DATE_MONDAY", "monday" },
      { G_DATE_TUESDAY, "G_DATE_TUESDAY", "tuesday" },
      { G_DATE_WEDNESDAY, "G_DATE_WEDNESDAY", "wednesday" },
      { G_DATE_THURSDAY, "G_DATE_THURSDAY", "thursday" },
      { G_DATE_FRIDAY, "G_DATE_FRIDAY", "friday" },
      { G_DATE_SATURDAY, "G_DATE_SATURDAY", "saturday" },
      { G_DATE_SUNDAY, "G_DATE_SUNDAY", "sunday" },
      { 0, NULL, NULL }
    };
    etype = g_enum_register_static ("GDateWeekday", values);
  }
  return etype;
}
GType
g_date_month_get_type (void)
{
  static GType etype = 0;
  if (etype == 0) {
    static const GEnumValue values[] = {
      { G_DATE_BAD_MONTH, "G_DATE_BAD_MONTH", "bad-month" },
      { G_DATE_JANUARY, "G_DATE_JANUARY", "january" },
      { G_DATE_FEBRUARY, "G_DATE_FEBRUARY", "february" },
      { G_DATE_MARCH, "G_DATE_MARCH", "march" },
      { G_DATE_APRIL, "G_DATE_APRIL", "april" },
      { G_DATE_MAY, "G_DATE_MAY", "may" },
      { G_DATE_JUNE, "G_DATE_JUNE", "june" },
      { G_DATE_JULY, "G_DATE_JULY", "july" },
      { G_DATE_AUGUST, "G_DATE_AUGUST", "august" },
      { G_DATE_SEPTEMBER, "G_DATE_SEPTEMBER", "september" },
      { G_DATE_OCTOBER, "G_DATE_OCTOBER", "october" },
      { G_DATE_NOVEMBER, "G_DATE_NOVEMBER", "november" },
      { G_DATE_DECEMBER, "G_DATE_DECEMBER", "december" },
      { 0, NULL, NULL }
    };
    etype = g_enum_register_static ("GDateMonth", values);
  }
  return etype;
}

/* Generated data ends here */

