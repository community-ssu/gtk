# Scale images together with the text
#
# Copyright (C) 2006 Nokia Corporation.
# This file is distributed under the terms of GNU LGPL license, either version 2
# of the License, or (at your option) any later version.
#
diff -ru gtkhtml-3.13.91/src/gtkhtml.c gtkhtml-3.9.1.mod/src/gtkhtml.c
--- gtkhtml-3.13.91/src/gtkhtml.c	2006-11-17 16:30:20.000000000 +0200
+++ gtkhtml-3.13.91.mod/src/gtkhtml.c	2006-11-17 16:45:00.000000000 +0200
@@ -5756,8 +5756,10 @@
 	} else if (HTML_IS_IFRAME (o)) {
 		html_font_manager_set_magnification (&GTK_HTML (HTML_IFRAME (o)->html)->engine->painter->font_manager,
 						     *(gdouble *) data);
-	} else if (HTML_IS_TEXT (o))
-		html_text_calc_font_size (HTML_TEXT (o), e);
+	} else if (HTML_IS_TEXT (o)) {
+		html_text_calc_font_size (HTML_TEXT (o), e); 
+	} else if (HTML_IS_IMAGE (o))
+		html_image_set_magnification (HTML_IMAGE (o), (*((gdouble *)data))) ;
 }
 
 void
diff -ru gtkhtml-3.13.91/src/htmlimage.c gtkhtml-3.9.1.mod/src/htmlimage.c
--- gtkhtml-3.13.91/src/htmlimage.c	2006-11-17 16:30:20.000000000 +0200
+++ gtkhtml-3.13.91.mod/src/htmlimage.c	2006-11-17 16:43:02.000000000 +0200
@@ -78,6 +78,13 @@
 
 static GdkPixbuf *         html_image_factory_get_missing       (HTMLImageFactory *factory);
 
+void
+html_image_set_magnification (HTMLImage *image, gdouble new_magnification)
+{
+	if (NULL == image) return ;
+	image->magnification = new_magnification ;
+}
+
 guint
 html_image_get_actual_width (HTMLImage *image, HTMLPainter *painter)
 {
@@ -89,13 +96,13 @@
 		/* The cast to `gdouble' is to avoid overflow (eg. when
                    printing).  */
 		width = ((gdouble) HTML_OBJECT (image)->max_width
-			 * image->specified_width) / 100;
+			 * image->specified_width) / 100 * image->magnification;
 	} else if (image->specified_width > 0) {
-		width = image->specified_width * pixel_size;
+		width = image->specified_width * pixel_size * image->magnification;
 	} else if (image->image_ptr == NULL || anim == NULL) {
-		width = DEFAULT_SIZE * pixel_size;
+		width = DEFAULT_SIZE * pixel_size * image->magnification;
 	} else {
-		width = gdk_pixbuf_animation_get_width (anim) * pixel_size;
+		width = gdk_pixbuf_animation_get_width (anim) * pixel_size * image->magnification;
 
 		if (image->specified_height > 0 || image->percent_height) {
 			double scale;
@@ -122,13 +129,13 @@
 		/* The cast to `gdouble' is to avoid overflow (eg. when
                    printing).  */
 		height = ((gdouble) html_engine_get_view_height (image->image_ptr->factory->engine)
-			  * image->specified_height) / 100;
+			  * image->specified_height) / 100 * image->magnification;
 	} else if (image->specified_height > 0) {
-		height = image->specified_height * pixel_size;
+		height = image->specified_height * pixel_size * image->magnification;
 	} else if (image->image_ptr == NULL || anim == NULL) {
-		height = DEFAULT_SIZE * pixel_size;
+		height = DEFAULT_SIZE * pixel_size * image->magnification;
 	} else {
-		height = gdk_pixbuf_animation_get_height (anim) * pixel_size;
+		height = gdk_pixbuf_animation_get_height (anim) * pixel_size * image->magnification;
 
 		if (image->specified_width > 0 || image->percent_width) {
 			double scale;
@@ -863,7 +870,7 @@
 	if (valign == HTML_VALIGN_NONE)
 		valign = HTML_VALIGN_BOTTOM;
 	image->valign = valign;
-
+	image->magnification = 1.0 ;
 	image->image_ptr = html_image_factory_register (imf, image, filename, reload);
 }
 
diff -ru gtkhtml-3.13.91/src/htmlimage.h gtkhtml-3.9.1.mod/src/htmlimage.h
--- gtkhtml-3.13.91/src/htmlimage.h	2003-05-20 18:17:13.000000000 +0300
+++ gtkhtml-3.13.91.mod/src/htmlimage.h	2006-11-17 16:41:59.000000000 +0200
@@ -74,6 +74,7 @@
 	gchar *alt;
 	gchar *usemap;
 	gchar *final_url;	
+	gdouble magnification ;
 };
 
 struct _HTMLImageClass {
@@ -142,6 +143,8 @@
 					    HTMLPainter     *painter);
 guint       html_image_get_actual_height   (HTMLImage       *image,
 					    HTMLPainter     *painter);
+void        html_image_set_magnification   (HTMLImage       *image,
+					    gdouble new_magnification) ;
 /* FIXME move to htmlimagefactory.c */
 HTMLImageFactory *html_image_factory_new                    (HTMLEngine       *e);
 void              html_image_factory_free                   (HTMLImageFactory *factory);
